{
	"id": "f24526b26964e3b5cbae5babeaa5c45b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ChainlinkOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"./IPriceOracle.sol\";\nimport \"./Denominations.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n// function getUnderlyingPrice(address underlying,address quote) external view returns (uint256);\n// function getBundlePrice(address wrapper, uint256 nftId) external view returns(uint256);\n\ninterface AggregatorV3Interface {\n    function decimals() external view returns (uint8);\n\n    function latestRoundData(address base, address quote)\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n}\n\ninterface IWrapper {\n    function getAmounts(uint256 _nftId)\n        external\n        view\n        returns (uint256[] memory);\n\n    function getTokens(uint256 _nftId) external view returns (address[] memory);\n}\n\ncontract ChainlinkOracle is IPriceOracle {\n    using Math for uint256;\n    //Chainlink Feed Registry are currently available on eth mainnet\n    AggregatorV3Interface private constant feedRegistry =\n        AggregatorV3Interface(0x47Fb2585D2C56Fe188D0E6ec628a38b74fCeeeDf);\n    event Log(string message);\n\n    address public immutable Wrapper;\n\n    constructor(address _wrapper) {\n        Wrapper = _wrapper;\n    }\n\n    function getBundlePrice(address wrapper, uint256 nftId)\n        external view\n        returns (uint256)\n    {\n        /// @notice If it's say a BAYC and not a wrapper, getUnderlyingPrice\n        if (wrapper != Wrapper) return _getUnderlyingPrice(wrapper);\n\n        address[] memory tokens = IWrapper(wrapper).getTokens(nftId);\n        uint256[] memory amounts = IWrapper(wrapper).getAmounts(nftId);\n        // loop through all assets and calculate borrowable USD\n        uint256 totalPriceUSD; // 18 decimal places\n        uint256 length = tokens.length;\n\n        for (uint256 i = 0; i < length; i++) {\n            // getUnderlyingPrice returns price in 18 decimals and USD\n            // the interface states that it should return zero when the price is unavailable.\n            // function getUnderlyingPrice(address underlying,address quote) external view returns (uint256);\n            uint256 underlyingPrice = _getUnderlyingPrice(tokens[i]);\n            if (underlyingPrice != 0) {\n                totalPriceUSD += underlyingPrice.mulDiv(amounts[i], 1e18);\n            }\n        }\n        return totalPriceUSD;\n    }\n\n    function getUnderlyingPrice(address _underlying)\n        external\n        view\n        returns (uint256)\n    {\n        return _getUnderlyingPrice(_underlying);\n    }\n\n    // default return type is USD price for collateral. Will fail if there deosn't exist a USD pair\n    // ToDo: add eth pair mode as well\n    function _getUnderlyingPrice(address underlying)\n        internal\n        view\n        returns (uint256)\n    {\n        //there is this concept address quote  ISO 4217 standard as per https://docs.chain.link/docs/feed-registry/#base-and-quote\n\n        address quote = Denominations.USD;\n        /*\n        try feedRegistry.latestRoundData(underlying, Denominations.USD) returns (,int256 tokenUsdPrice,,,) {\n        (underlyingPrice 10 ** uint256(feedRegistry.decimals(underlying, Denominations.USD))\n        */\n        uint8 decimals = feedRegistry.decimals();\n        (, int256 underlyingPrice, , , ) = feedRegistry.latestRoundData(\n            underlying,\n            quote\n        );\n\n        return\n            //overflow/underflow checks default in compiler in 0.8\n            uint256((underlyingPrice) * (1e26)) / (10**uint256(decimals));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/Denominations.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nlibrary Denominations {\n    address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    address public constant BTC = 0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB;\n\n    // Fiat currencies follow https://en.wikipedia.org/wiki/ISO_4217\n    address public constant USD = address(840);\n    address public constant GBP = address(826);\n    address public constant EUR = address(978);\n    address public constant JPY = address(392);\n    address public constant KRW = address(410);\n    address public constant CNY = address(156);\n    address public constant AUD = address(36);\n    address public constant CAD = address(124);\n    address public constant CHF = address(756);\n    address public constant ARS = address(32);\n    address public constant PHP = address(608);\n    address public constant NZD = address(554);\n    address public constant SGD = address(702);\n    address public constant NGN = address(566);\n    address public constant ZAR = address(710);\n    address public constant RUB = address(643);\n    address public constant INR = address(356);\n    address public constant BRL = address(986);\n}\n"
			},
			"contracts/IPriceOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\ninterface IPriceOracle {\n    // Standardize oracle output\n    // Return price of asset in WETH terms, (1e18)\n    function getUnderlyingPrice(address underlying) external view returns (uint256);\n    function getBundlePrice(address wrapper, uint256 nftId) external view returns(uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/ChainlinkOracle.sol",
								"contracts/Denominations.sol",
								"contracts/IPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ChainlinkOracle.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								}
							],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"latestRoundData(address,address)": "bcfd032d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkOracle.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/ChainlinkOracle.sol\":{\"keccak256\":\"0x8ce5b65ee7edb00ba82bca8c373476dcbcae7a226d764020661567d632aaa668\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec3a34d0c054f07bab73eb77f8f7f6db6c2f51a227e62b9cad45262cce18107d\",\"dweb:/ipfs/QmT6rD9swZBJRLJ2UpiUsYuGb7PxKKAXJTPPdt2jj9pw7B\"]},\"contracts/Denominations.sol\":{\"keccak256\":\"0xb5ec27aedcbf4b32a9e514cd7f5d3b95093e3d04a4eb42f482377f45dc030d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd7b7f2a5563993cdd6d7e5c6e58748d3b661a588fd3abf5e53e7f1625a7b88\",\"dweb:/ipfs/QmccN3SPi23dvChdZfMgC6Hj16uK3FxDgpffvGSKR6aWJL\"]},\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xdabed1b1214f7f821fb9833d6d5eb4b92ac18eacb5db83222235eaf9fb17e24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63fb1f83980a5e691e8066322a18202d004191c536af9360d8d612a8915a1f45\",\"dweb:/ipfs/QmSZ6bwaEjRsCeYnmbkYgY6ZSW3pqmXYPE7jLv2WBqCo5W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ChainlinkOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wrapper",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Wrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wrapper",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "getBundlePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_underlying",
									"type": "address"
								}
							],
							"name": "getUnderlyingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ChainlinkOracle.sol\":936:3644  contract ChainlinkOracle is IPriceOracle {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ChainlinkOracle.sol\":1284:1349  constructor(address _wrapper) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ChainlinkOracle.sol\":1334:1342  _wrapper */\n  dup1\n    /* \"contracts/ChainlinkOracle.sol\":1324:1342  Wrapper = _wrapper */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ChainlinkOracle.sol\":1284:1349  constructor(address _wrapper) {... */\n  pop\n    /* \"contracts/ChainlinkOracle.sol\":936:3644  contract ChainlinkOracle is IPriceOracle {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ChainlinkOracle.sol\":936:3644  contract ChainlinkOracle is IPriceOracle {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbd77d8f3a1add977750c97043bae05dfa55d0b216d47c07d4ef7416de3dc26e1\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ChainlinkOracle.sol\":936:3644  contract ChainlinkOracle is IPriceOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06cd702c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08a130ab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc57d4df\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ChainlinkOracle.sol\":1355:2477  function getBundlePrice(address wrapper, uint256 nftId)... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkOracle.sol\":1245:1277  address public immutable Wrapper */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkOracle.sol\":2483:2648  function getUnderlyingPrice(address _underlying)... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkOracle.sol\":1355:2477  function getBundlePrice(address wrapper, uint256 nftId)... */\n    tag_9:\n        /* \"contracts/ChainlinkOracle.sol\":1450:1457  uint256 */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1565:1572  Wrapper */\n      immutable(\"0xbd77d8f3a1add977750c97043bae05dfa55d0b216d47c07d4ef7416de3dc26e1\")\n        /* \"contracts/ChainlinkOracle.sol\":1554:1572  wrapper != Wrapper */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ChainlinkOracle.sol\":1554:1561  wrapper */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":1554:1572  wrapper != Wrapper */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ChainlinkOracle.sol\":1550:1609  if (wrapper != Wrapper) return _getUnderlyingPrice(wrapper) */\n      tag_22\n      jumpi\n        /* \"contracts/ChainlinkOracle.sol\":1581:1609  _getUnderlyingPrice(wrapper) */\n      tag_23\n        /* \"contracts/ChainlinkOracle.sol\":1601:1608  wrapper */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":1581:1600  _getUnderlyingPrice */\n      tag_24\n        /* \"contracts/ChainlinkOracle.sol\":1581:1609  _getUnderlyingPrice(wrapper) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/ChainlinkOracle.sol\":1574:1609  return _getUnderlyingPrice(wrapper) */\n      swap1\n      pop\n      jump(tag_21)\n        /* \"contracts/ChainlinkOracle.sol\":1550:1609  if (wrapper != Wrapper) return _getUnderlyingPrice(wrapper) */\n    tag_22:\n        /* \"contracts/ChainlinkOracle.sol\":1620:1643  address[] memory tokens */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1655:1662  wrapper */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":1646:1673  IWrapper(wrapper).getTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd3c9cc26\n        /* \"contracts/ChainlinkOracle.sol\":1674:1679  nftId */\n      dup5\n        /* \"contracts/ChainlinkOracle.sol\":1646:1680  IWrapper(wrapper).getTokens(nftId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"contracts/ChainlinkOracle.sol\":1620:1680  address[] memory tokens = IWrapper(wrapper).getTokens(nftId) */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1690:1714  uint256[] memory amounts */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1726:1733  wrapper */\n      dup5\n        /* \"contracts/ChainlinkOracle.sol\":1717:1745  IWrapper(wrapper).getAmounts */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x59f7cf50\n        /* \"contracts/ChainlinkOracle.sol\":1746:1751  nftId */\n      dup6\n        /* \"contracts/ChainlinkOracle.sol\":1717:1752  IWrapper(wrapper).getAmounts(nftId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_30:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/ChainlinkOracle.sol\":1690:1752  uint256[] memory amounts = IWrapper(wrapper).getAmounts(nftId) */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1826:1847  uint256 totalPriceUSD */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1878:1892  uint256 length */\n      dup1\n        /* \"contracts/ChainlinkOracle.sol\":1895:1901  tokens */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":1895:1908  tokens.length */\n      mload\n        /* \"contracts/ChainlinkOracle.sol\":1878:1908  uint256 length = tokens.length */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1924:1933  uint256 i */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1919:2441  for (uint256 i = 0; i < length; i++) {... */\n    tag_35:\n        /* \"contracts/ChainlinkOracle.sol\":1943:1949  length */\n      dup2\n        /* \"contracts/ChainlinkOracle.sol\":1939:1940  i */\n      dup2\n        /* \"contracts/ChainlinkOracle.sol\":1939:1949  i < length */\n      lt\n        /* \"contracts/ChainlinkOracle.sol\":1919:2441  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"contracts/ChainlinkOracle.sol\":2245:2268  uint256 underlyingPrice */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":2271:2301  _getUnderlyingPrice(tokens[i]) */\n      tag_38\n        /* \"contracts/ChainlinkOracle.sol\":2291:2297  tokens */\n      dup7\n        /* \"contracts/ChainlinkOracle.sol\":2298:2299  i */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":2291:2300  tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ChainlinkOracle.sol\":2271:2290  _getUnderlyingPrice */\n      tag_24\n        /* \"contracts/ChainlinkOracle.sol\":2271:2301  _getUnderlyingPrice(tokens[i]) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/ChainlinkOracle.sol\":2245:2301  uint256 underlyingPrice = _getUnderlyingPrice(tokens[i]) */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":2338:2339  0 */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":2319:2334  underlyingPrice */\n      dup2\n        /* \"contracts/ChainlinkOracle.sol\":2319:2339  underlyingPrice != 0 */\n      eq\n        /* \"contracts/ChainlinkOracle.sol\":2315:2431  if (underlyingPrice != 0) {... */\n      tag_42\n      jumpi\n        /* \"contracts/ChainlinkOracle.sol\":2376:2416  underlyingPrice.mulDiv(amounts[i], 1e18) */\n      tag_43\n        /* \"contracts/ChainlinkOracle.sol\":2399:2406  amounts */\n      dup6\n        /* \"contracts/ChainlinkOracle.sol\":2407:2408  i */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":2399:2409  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_41\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ChainlinkOracle.sol\":2411:2415  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ChainlinkOracle.sol\":2376:2391  underlyingPrice */\n      dup4\n        /* \"contracts/ChainlinkOracle.sol\":2376:2398  underlyingPrice.mulDiv */\n      tag_46\n      swap1\n        /* \"contracts/ChainlinkOracle.sol\":2376:2416  underlyingPrice.mulDiv(amounts[i], 1e18) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"contracts/ChainlinkOracle.sol\":2359:2416  totalPriceUSD += underlyingPrice.mulDiv(amounts[i], 1e18) */\n      dup5\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      swap4\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":2315:2431  if (underlyingPrice != 0) {... */\n    tag_42:\n        /* \"contracts/ChainlinkOracle.sol\":1956:2441  {... */\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1951:1954  i++ */\n      dup1\n      dup1\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      swap2\n      pop\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1919:2441  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_35)\n    tag_36:\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":2457:2470  totalPriceUSD */\n      dup2\n        /* \"contracts/ChainlinkOracle.sol\":2450:2470  return totalPriceUSD */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":1355:2477  function getBundlePrice(address wrapper, uint256 nftId)... */\n    tag_21:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkOracle.sol\":1245:1277  address public immutable Wrapper */\n    tag_13:\n      immutable(\"0xbd77d8f3a1add977750c97043bae05dfa55d0b216d47c07d4ef7416de3dc26e1\")\n      dup2\n      jump\t// out\n        /* \"contracts/ChainlinkOracle.sol\":2483:2648  function getUnderlyingPrice(address _underlying)... */\n    tag_19:\n        /* \"contracts/ChainlinkOracle.sol\":2579:2586  uint256 */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":2609:2641  _getUnderlyingPrice(_underlying) */\n      tag_52\n        /* \"contracts/ChainlinkOracle.sol\":2629:2640  _underlying */\n      dup3\n        /* \"contracts/ChainlinkOracle.sol\":2609:2628  _getUnderlyingPrice */\n      tag_24\n        /* \"contracts/ChainlinkOracle.sol\":2609:2641  _getUnderlyingPrice(_underlying) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/ChainlinkOracle.sol\":2602:2641  return _getUnderlyingPrice(_underlying) */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":2483:2648  function getUnderlyingPrice(address _underlying)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkOracle.sol\":2793:3642  function _getUnderlyingPrice(address underlying)... */\n    tag_24:\n        /* \"contracts/ChainlinkOracle.sol\":2889:2896  uint256 */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":3044:3057  address quote */\n      dup1\n        /* \"contracts/Denominations.sol\":350:353  840 */\n      0x0348\n        /* \"contracts/ChainlinkOracle.sol\":3044:3077  address quote = Denominations.USD */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":3311:3325  uint8 decimals */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1164:1206  0x47Fb2585D2C56Fe188D0E6ec628a38b74fCeeeDf */\n      0x47fb2585d2c56fe188d0e6ec628a38b74fceeedf\n        /* \"contracts/ChainlinkOracle.sol\":3328:3349  feedRegistry.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/ChainlinkOracle.sol\":3328:3351  feedRegistry.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/ChainlinkOracle.sol\":3311:3351  uint8 decimals = feedRegistry.decimals() */\n      swap1\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":3364:3386  int256 underlyingPrice */\n      0x00\n        /* \"contracts/ChainlinkOracle.sol\":1164:1206  0x47Fb2585D2C56Fe188D0E6ec628a38b74fCeeeDf */\n      0x47fb2585d2c56fe188d0e6ec628a38b74fceeedf\n        /* \"contracts/ChainlinkOracle.sol\":3396:3424  feedRegistry.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbcfd032d\n        /* \"contracts/ChainlinkOracle.sol\":3438:3448  underlying */\n      dup7\n        /* \"contracts/ChainlinkOracle.sol\":3462:3467  quote */\n      dup6\n        /* \"contracts/ChainlinkOracle.sol\":3396:3477  feedRegistry.latestRoundData(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/ChainlinkOracle.sol\":3361:3477  (, int256 underlyingPrice, , , ) = feedRegistry.latestRoundData(... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":3625:3633  decimals */\n      dup2\n        /* \"contracts/ChainlinkOracle.sol\":3617:3634  uint256(decimals) */\n      0xff\n      and\n        /* \"contracts/ChainlinkOracle.sol\":3613:3615  10 */\n      0x0a\n        /* \"contracts/ChainlinkOracle.sol\":3613:3634  10**uint256(decimals) */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/ChainlinkOracle.sol\":3603:3607  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/ChainlinkOracle.sol\":3583:3598  underlyingPrice */\n      dup3\n        /* \"contracts/ChainlinkOracle.sol\":3582:3608  (underlyingPrice) * (1e26) */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/ChainlinkOracle.sol\":3574:3635  uint256((underlyingPrice) * (1e26)) / (10**uint256(decimals)) */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/ChainlinkOracle.sol\":3488:3635  return... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ChainlinkOracle.sol\":2793:3642  function _getUnderlyingPrice(address underlying)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1668:5593  function mulDiv(... */\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1780:1794  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2127:2140  uint256 prod0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2199:2212  uint256 prod1 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2324:2325  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2320:2326  not(0) */\n      not\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2317:2318  y */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2314:2315  x */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2307:2327  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2360:2361  y */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2357:2358  x */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2353:2362  mul(x, y) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2344:2362  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2415:2420  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2411:2413  mm */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2408:2421  lt(mm, prod0) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2400:2405  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2396:2398  mm */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2392:2406  sub(mm, prod0) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2388:2422  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2379:2422  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2279:2436  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2526:2527  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2517:2522  prod1 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2517:2527  prod1 == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2513:2588  if (prod1 == 0) {... */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2562:2573  denominator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2554:2559  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2554:2573  prod0 / denominator */\n      dup2\n      tag_72\n      jumpi\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n    tag_72:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2547:2573  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_70)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2513:2588  if (prod1 == 0) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2712:2717  prod1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2698:2709  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2698:2717  denominator > prod1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2690:2718  require(denominator > prod1) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2974:2991  uint256 remainder */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3109:3120  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3106:3107  y */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3103:3104  x */\n      dup9\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3096:3121  mulmod(x, y, denominator) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3083:3121  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3237:3242  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3226:3235  remainder */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3223:3243  gt(remainder, prod0) */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3216:3221  prod1 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3212:3244  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3203:3244  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3281:3290  remainder */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3274:3279  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3270:3291  sub(prod0, remainder) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3261:3291  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3612:3624  uint256 twos */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3657:3658  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3643:3654  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3642:3654  ~denominator */\n      not\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3642:3658  ~denominator + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3627:3638  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3627:3659  denominator & (~denominator + 1) */\n      and\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3612:3659  uint256 twos = denominator & (~denominator + 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3779:3783  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3766:3777  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3762:3784  div(denominator, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3747:3784  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3871:3875  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3864:3869  prod0 */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3860:3876  div(prod0, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3851:3876  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4028:4029  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4021:4025  twos */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4014:4018  twos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4011:4012  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4007:4019  sub(0, twos) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4003:4026  div(sub(0, twos), twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3999:4030  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3991:4030  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4127:4131  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4119:4124  prod1 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4119:4131  prod1 * twos */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4110:4131  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4449:4464  uint256 inverse */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4487:4488  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4472:4483  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4468:4469  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4468:4483  3 * denominator */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4467:4488  (3 * denominator) ^ 2 */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4449:4488  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4734:4741  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4720:4731  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4720:4741  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4716:4717  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4716:4741  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4705:4741  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4803:4810  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4789:4800  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4789:4810  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4785:4786  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4785:4810  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4774:4810  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4873:4880  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4859:4870  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4859:4880  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4855:4856  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4855:4880  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4844:4880  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4943:4950  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4929:4940  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4929:4950  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4925:4926  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4925:4950  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4914:4950  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5013:5020  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4999:5010  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4999:5020  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4995:4996  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4995:5020  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4984:5020  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5084:5091  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5070:5081  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5070:5091  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5066:5067  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5066:5091  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5055:5091  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5542:5549  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5534:5539  prod0 */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5534:5549  prod0 * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5525:5549  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5563:5576  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1668:5593  function mulDiv(... */\n    tag_70:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_76:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_77:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_78:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_79:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_80:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_121\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_79\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_81:\n        /* \"#utility.yul\":641:665   */\n      tag_123\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_80\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_124:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_82:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_126\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_81\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_83:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_84:\n        /* \"#utility.yul\":997:1021   */\n      tag_129\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_83\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_130:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_85:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_132\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_84\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_8:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_135\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1290:1409   */\n    tag_134:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_136\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_82\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_137\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_85\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_86:\n        /* \"#utility.yul\":1764:1788   */\n      tag_139\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_83\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_11:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_141\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_86\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2147   */\n    tag_87:\n        /* \"#utility.yul\":2116:2140   */\n      tag_143\n        /* \"#utility.yul\":2134:2139   */\n      dup2\n        /* \"#utility.yul\":2116:2140   */\n      tag_80\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2111:2114   */\n      dup3\n        /* \"#utility.yul\":2104:2141   */\n      mstore\n        /* \"#utility.yul\":2029:2147   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2153:2375   */\n    tag_15:\n        /* \"#utility.yul\":2246:2250   */\n      0x00\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup3\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2261:2287   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2368   */\n      tag_145\n        /* \"#utility.yul\":2365:2366   */\n      0x00\n        /* \"#utility.yul\":2354:2363   */\n      dup4\n        /* \"#utility.yul\":2350:2367   */\n      add\n        /* \"#utility.yul\":2341:2347   */\n      dup5\n        /* \"#utility.yul\":2297:2368   */\n      tag_87\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2153:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2710   */\n    tag_18:\n        /* \"#utility.yul\":2440:2446   */\n      0x00\n        /* \"#utility.yul\":2489:2491   */\n      0x20\n        /* \"#utility.yul\":2477:2486   */\n      dup3\n        /* \"#utility.yul\":2468:2475   */\n      dup5\n        /* \"#utility.yul\":2464:2487   */\n      sub\n        /* \"#utility.yul\":2460:2492   */\n      slt\n        /* \"#utility.yul\":2457:2576   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2495:2574   */\n      tag_148\n      tag_77\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2457:2576   */\n    tag_147:\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2640:2693   */\n      tag_149\n        /* \"#utility.yul\":2685:2692   */\n      dup5\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2665:2674   */\n      dup6\n        /* \"#utility.yul\":2661:2683   */\n      add\n        /* \"#utility.yul\":2640:2693   */\n      tag_82\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2630:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2586:2703   */\n      pop\n        /* \"#utility.yul\":2381:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2833   */\n    tag_88:\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2822:2823   */\n      dup1\n        /* \"#utility.yul\":2815:2827   */\n      revert\n        /* \"#utility.yul\":2839:2941   */\n    tag_89:\n        /* \"#utility.yul\":2880:2886   */\n      0x00\n        /* \"#utility.yul\":2931:2933   */\n      0x1f\n        /* \"#utility.yul\":2927:2934   */\n      not\n        /* \"#utility.yul\":2922:2924   */\n      0x1f\n        /* \"#utility.yul\":2915:2920   */\n      dup4\n        /* \"#utility.yul\":2911:2925   */\n      add\n        /* \"#utility.yul\":2907:2935   */\n      and\n        /* \"#utility.yul\":2897:2935   */\n      swap1\n      pop\n        /* \"#utility.yul\":2839:2941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2947:3127   */\n    tag_90:\n        /* \"#utility.yul\":2995:3072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2992:2993   */\n      0x00\n        /* \"#utility.yul\":2985:3073   */\n      mstore\n        /* \"#utility.yul\":3092:3096   */\n      0x41\n        /* \"#utility.yul\":3089:3090   */\n      0x04\n        /* \"#utility.yul\":3082:3097   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":3133:3414   */\n    tag_91:\n        /* \"#utility.yul\":3216:3243   */\n      tag_154\n        /* \"#utility.yul\":3238:3242   */\n      dup3\n        /* \"#utility.yul\":3216:3243   */\n      tag_89\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3208:3214   */\n      dup2\n        /* \"#utility.yul\":3204:3244   */\n      add\n        /* \"#utility.yul\":3346:3352   */\n      dup2\n        /* \"#utility.yul\":3334:3344   */\n      dup2\n        /* \"#utility.yul\":3331:3353   */\n      lt\n        /* \"#utility.yul\":3310:3328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3298:3308   */\n      dup3\n        /* \"#utility.yul\":3295:3329   */\n      gt\n        /* \"#utility.yul\":3292:3354   */\n      or\n        /* \"#utility.yul\":3289:3377   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3357:3375   */\n      tag_156\n      tag_90\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3289:3377   */\n    tag_155:\n        /* \"#utility.yul\":3397:3407   */\n      dup1\n        /* \"#utility.yul\":3393:3395   */\n      0x40\n        /* \"#utility.yul\":3386:3408   */\n      mstore\n        /* \"#utility.yul\":3176:3414   */\n      pop\n        /* \"#utility.yul\":3133:3414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:3549   */\n    tag_92:\n        /* \"#utility.yul\":3454:3460   */\n      0x00\n        /* \"#utility.yul\":3481:3501   */\n      tag_158\n      tag_76\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3471:3501   */\n      swap1\n      pop\n        /* \"#utility.yul\":3510:3543   */\n      tag_159\n        /* \"#utility.yul\":3538:3542   */\n      dup3\n        /* \"#utility.yul\":3530:3536   */\n      dup3\n        /* \"#utility.yul\":3510:3543   */\n      tag_91\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3420:3549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3555:3866   */\n    tag_93:\n        /* \"#utility.yul\":3632:3636   */\n      0x00\n        /* \"#utility.yul\":3722:3740   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3714:3720   */\n      dup3\n        /* \"#utility.yul\":3711:3741   */\n      gt\n        /* \"#utility.yul\":3708:3764   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3744:3762   */\n      tag_162\n      tag_90\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3708:3764   */\n    tag_161:\n        /* \"#utility.yul\":3794:3798   */\n      0x20\n        /* \"#utility.yul\":3786:3792   */\n      dup3\n        /* \"#utility.yul\":3782:3799   */\n      mul\n        /* \"#utility.yul\":3774:3799   */\n      swap1\n      pop\n        /* \"#utility.yul\":3854:3858   */\n      0x20\n        /* \"#utility.yul\":3848:3852   */\n      dup2\n        /* \"#utility.yul\":3844:3859   */\n      add\n        /* \"#utility.yul\":3836:3859   */\n      swap1\n      pop\n        /* \"#utility.yul\":3555:3866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3872:3989   */\n    tag_94:\n        /* \"#utility.yul\":3981:3982   */\n      0x00\n        /* \"#utility.yul\":3978:3979   */\n      dup1\n        /* \"#utility.yul\":3971:3983   */\n      revert\n        /* \"#utility.yul\":3995:4138   */\n    tag_95:\n        /* \"#utility.yul\":4052:4057   */\n      0x00\n        /* \"#utility.yul\":4083:4089   */\n      dup2\n        /* \"#utility.yul\":4077:4090   */\n      mload\n        /* \"#utility.yul\":4068:4090   */\n      swap1\n      pop\n        /* \"#utility.yul\":4099:4132   */\n      tag_165\n        /* \"#utility.yul\":4126:4131   */\n      dup2\n        /* \"#utility.yul\":4099:4132   */\n      tag_81\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3995:4138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4161:4893   */\n    tag_96:\n        /* \"#utility.yul\":4268:4273   */\n      0x00\n        /* \"#utility.yul\":4293:4374   */\n      tag_167\n        /* \"#utility.yul\":4309:4373   */\n      tag_168\n        /* \"#utility.yul\":4366:4372   */\n      dup5\n        /* \"#utility.yul\":4309:4373   */\n      tag_93\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4293:4374   */\n      tag_92\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4284:4374   */\n      swap1\n      pop\n        /* \"#utility.yul\":4394:4399   */\n      dup1\n        /* \"#utility.yul\":4423:4429   */\n      dup4\n        /* \"#utility.yul\":4416:4421   */\n      dup3\n        /* \"#utility.yul\":4409:4430   */\n      mstore\n        /* \"#utility.yul\":4457:4461   */\n      0x20\n        /* \"#utility.yul\":4450:4455   */\n      dup3\n        /* \"#utility.yul\":4446:4462   */\n      add\n        /* \"#utility.yul\":4439:4462   */\n      swap1\n      pop\n        /* \"#utility.yul\":4510:4514   */\n      0x20\n        /* \"#utility.yul\":4502:4508   */\n      dup5\n        /* \"#utility.yul\":4498:4515   */\n      mul\n        /* \"#utility.yul\":4490:4496   */\n      dup4\n        /* \"#utility.yul\":4486:4516   */\n      add\n        /* \"#utility.yul\":4539:4542   */\n      dup6\n        /* \"#utility.yul\":4531:4537   */\n      dup2\n        /* \"#utility.yul\":4528:4543   */\n      gt\n        /* \"#utility.yul\":4525:4647   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":4558:4637   */\n      tag_170\n      tag_94\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4525:4647   */\n    tag_169:\n        /* \"#utility.yul\":4673:4679   */\n      dup4\n        /* \"#utility.yul\":4656:4887   */\n    tag_171:\n        /* \"#utility.yul\":4690:4696   */\n      dup2\n        /* \"#utility.yul\":4685:4688   */\n      dup2\n        /* \"#utility.yul\":4682:4697   */\n      lt\n        /* \"#utility.yul\":4656:4887   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":4765:4768   */\n      dup1\n        /* \"#utility.yul\":4794:4842   */\n      tag_174\n        /* \"#utility.yul\":4838:4841   */\n      dup9\n        /* \"#utility.yul\":4826:4836   */\n      dup3\n        /* \"#utility.yul\":4794:4842   */\n      tag_95\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4789:4792   */\n      dup5\n        /* \"#utility.yul\":4782:4843   */\n      mstore\n        /* \"#utility.yul\":4872:4876   */\n      0x20\n        /* \"#utility.yul\":4867:4870   */\n      dup5\n        /* \"#utility.yul\":4863:4877   */\n      add\n        /* \"#utility.yul\":4856:4877   */\n      swap4\n      pop\n        /* \"#utility.yul\":4732:4887   */\n      pop\n        /* \"#utility.yul\":4716:4720   */\n      0x20\n        /* \"#utility.yul\":4711:4714   */\n      dup2\n        /* \"#utility.yul\":4707:4721   */\n      add\n        /* \"#utility.yul\":4700:4721   */\n      swap1\n      pop\n        /* \"#utility.yul\":4656:4887   */\n      jump(tag_171)\n    tag_173:\n        /* \"#utility.yul\":4660:4681   */\n      pop\n        /* \"#utility.yul\":4274:4893   */\n      pop\n      pop\n        /* \"#utility.yul\":4161:4893   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4916:5301   */\n    tag_97:\n        /* \"#utility.yul\":4998:5003   */\n      0x00\n        /* \"#utility.yul\":5047:5050   */\n      dup3\n        /* \"#utility.yul\":5040:5044   */\n      0x1f\n        /* \"#utility.yul\":5032:5038   */\n      dup4\n        /* \"#utility.yul\":5028:5045   */\n      add\n        /* \"#utility.yul\":5024:5051   */\n      slt\n        /* \"#utility.yul\":5014:5136   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5055:5134   */\n      tag_177\n      tag_88\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5014:5136   */\n    tag_176:\n        /* \"#utility.yul\":5165:5171   */\n      dup2\n        /* \"#utility.yul\":5159:5172   */\n      mload\n        /* \"#utility.yul\":5190:5295   */\n      tag_178\n        /* \"#utility.yul\":5291:5294   */\n      dup5\n        /* \"#utility.yul\":5283:5289   */\n      dup3\n        /* \"#utility.yul\":5276:5280   */\n      0x20\n        /* \"#utility.yul\":5268:5274   */\n      dup7\n        /* \"#utility.yul\":5264:5281   */\n      add\n        /* \"#utility.yul\":5190:5295   */\n      tag_96\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5181:5295   */\n      swap2\n      pop\n        /* \"#utility.yul\":5004:5301   */\n      pop\n        /* \"#utility.yul\":4916:5301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5307:5861   */\n    tag_29:\n        /* \"#utility.yul\":5402:5408   */\n      0x00\n        /* \"#utility.yul\":5451:5453   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup3\n        /* \"#utility.yul\":5430:5437   */\n      dup5\n        /* \"#utility.yul\":5426:5449   */\n      sub\n        /* \"#utility.yul\":5422:5454   */\n      slt\n        /* \"#utility.yul\":5419:5538   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5457:5536   */\n      tag_181\n      tag_77\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5419:5538   */\n    tag_180:\n        /* \"#utility.yul\":5598:5599   */\n      0x00\n        /* \"#utility.yul\":5587:5596   */\n      dup3\n        /* \"#utility.yul\":5583:5600   */\n      add\n        /* \"#utility.yul\":5577:5601   */\n      mload\n        /* \"#utility.yul\":5628:5646   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5620:5626   */\n      dup2\n        /* \"#utility.yul\":5617:5647   */\n      gt\n        /* \"#utility.yul\":5614:5731   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_183\n      tag_78\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5614:5731   */\n    tag_182:\n        /* \"#utility.yul\":5755:5844   */\n      tag_184\n        /* \"#utility.yul\":5836:5843   */\n      dup5\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup6\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5755:5844   */\n      tag_97\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5745:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5548:5854   */\n      pop\n        /* \"#utility.yul\":5307:5861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6178   */\n    tag_98:\n        /* \"#utility.yul\":5944:5948   */\n      0x00\n        /* \"#utility.yul\":6034:6052   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6026:6032   */\n      dup3\n        /* \"#utility.yul\":6023:6053   */\n      gt\n        /* \"#utility.yul\":6020:6076   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":6056:6074   */\n      tag_187\n      tag_90\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6020:6076   */\n    tag_186:\n        /* \"#utility.yul\":6106:6110   */\n      0x20\n        /* \"#utility.yul\":6098:6104   */\n      dup3\n        /* \"#utility.yul\":6094:6111   */\n      mul\n        /* \"#utility.yul\":6086:6111   */\n      swap1\n      pop\n        /* \"#utility.yul\":6166:6170   */\n      0x20\n        /* \"#utility.yul\":6160:6164   */\n      dup2\n        /* \"#utility.yul\":6156:6171   */\n      add\n        /* \"#utility.yul\":6148:6171   */\n      swap1\n      pop\n        /* \"#utility.yul\":5867:6178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6327   */\n    tag_99:\n        /* \"#utility.yul\":6241:6246   */\n      0x00\n        /* \"#utility.yul\":6272:6278   */\n      dup2\n        /* \"#utility.yul\":6266:6279   */\n      mload\n        /* \"#utility.yul\":6257:6279   */\n      swap1\n      pop\n        /* \"#utility.yul\":6288:6321   */\n      tag_189\n        /* \"#utility.yul\":6315:6320   */\n      dup2\n        /* \"#utility.yul\":6288:6321   */\n      tag_84\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6184:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6350:7082   */\n    tag_100:\n        /* \"#utility.yul\":6457:6462   */\n      0x00\n        /* \"#utility.yul\":6482:6563   */\n      tag_191\n        /* \"#utility.yul\":6498:6562   */\n      tag_192\n        /* \"#utility.yul\":6555:6561   */\n      dup5\n        /* \"#utility.yul\":6498:6562   */\n      tag_98\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6482:6563   */\n      tag_92\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6473:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6588   */\n      dup1\n        /* \"#utility.yul\":6612:6618   */\n      dup4\n        /* \"#utility.yul\":6605:6610   */\n      dup3\n        /* \"#utility.yul\":6598:6619   */\n      mstore\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6639:6644   */\n      dup3\n        /* \"#utility.yul\":6635:6651   */\n      add\n        /* \"#utility.yul\":6628:6651   */\n      swap1\n      pop\n        /* \"#utility.yul\":6699:6703   */\n      0x20\n        /* \"#utility.yul\":6691:6697   */\n      dup5\n        /* \"#utility.yul\":6687:6704   */\n      mul\n        /* \"#utility.yul\":6679:6685   */\n      dup4\n        /* \"#utility.yul\":6675:6705   */\n      add\n        /* \"#utility.yul\":6728:6731   */\n      dup6\n        /* \"#utility.yul\":6720:6726   */\n      dup2\n        /* \"#utility.yul\":6717:6732   */\n      gt\n        /* \"#utility.yul\":6714:6836   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":6747:6826   */\n      tag_194\n      tag_94\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6714:6836   */\n    tag_193:\n        /* \"#utility.yul\":6862:6868   */\n      dup4\n        /* \"#utility.yul\":6845:7076   */\n    tag_195:\n        /* \"#utility.yul\":6879:6885   */\n      dup2\n        /* \"#utility.yul\":6874:6877   */\n      dup2\n        /* \"#utility.yul\":6871:6886   */\n      lt\n        /* \"#utility.yul\":6845:7076   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":6954:6957   */\n      dup1\n        /* \"#utility.yul\":6983:7031   */\n      tag_198\n        /* \"#utility.yul\":7027:7030   */\n      dup9\n        /* \"#utility.yul\":7015:7025   */\n      dup3\n        /* \"#utility.yul\":6983:7031   */\n      tag_99\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6978:6981   */\n      dup5\n        /* \"#utility.yul\":6971:7032   */\n      mstore\n        /* \"#utility.yul\":7061:7065   */\n      0x20\n        /* \"#utility.yul\":7056:7059   */\n      dup5\n        /* \"#utility.yul\":7052:7066   */\n      add\n        /* \"#utility.yul\":7045:7066   */\n      swap4\n      pop\n        /* \"#utility.yul\":6921:7076   */\n      pop\n        /* \"#utility.yul\":6905:6909   */\n      0x20\n        /* \"#utility.yul\":6900:6903   */\n      dup2\n        /* \"#utility.yul\":6896:6910   */\n      add\n        /* \"#utility.yul\":6889:6910   */\n      swap1\n      pop\n        /* \"#utility.yul\":6845:7076   */\n      jump(tag_195)\n    tag_197:\n        /* \"#utility.yul\":6849:6870   */\n      pop\n        /* \"#utility.yul\":6463:7082   */\n      pop\n      pop\n        /* \"#utility.yul\":6350:7082   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7490   */\n    tag_101:\n        /* \"#utility.yul\":7187:7192   */\n      0x00\n        /* \"#utility.yul\":7236:7239   */\n      dup3\n        /* \"#utility.yul\":7229:7233   */\n      0x1f\n        /* \"#utility.yul\":7221:7227   */\n      dup4\n        /* \"#utility.yul\":7217:7234   */\n      add\n        /* \"#utility.yul\":7213:7240   */\n      slt\n        /* \"#utility.yul\":7203:7325   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":7244:7323   */\n      tag_201\n      tag_88\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7203:7325   */\n    tag_200:\n        /* \"#utility.yul\":7354:7360   */\n      dup2\n        /* \"#utility.yul\":7348:7361   */\n      mload\n        /* \"#utility.yul\":7379:7484   */\n      tag_202\n        /* \"#utility.yul\":7480:7483   */\n      dup5\n        /* \"#utility.yul\":7472:7478   */\n      dup3\n        /* \"#utility.yul\":7465:7469   */\n      0x20\n        /* \"#utility.yul\":7457:7463   */\n      dup7\n        /* \"#utility.yul\":7453:7470   */\n      add\n        /* \"#utility.yul\":7379:7484   */\n      tag_100\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7370:7484   */\n      swap2\n      pop\n        /* \"#utility.yul\":7193:7490   */\n      pop\n        /* \"#utility.yul\":7105:7490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7496:8050   */\n    tag_34:\n        /* \"#utility.yul\":7591:7597   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x20\n        /* \"#utility.yul\":7628:7637   */\n      dup3\n        /* \"#utility.yul\":7619:7626   */\n      dup5\n        /* \"#utility.yul\":7615:7638   */\n      sub\n        /* \"#utility.yul\":7611:7643   */\n      slt\n        /* \"#utility.yul\":7608:7727   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":7646:7725   */\n      tag_205\n      tag_77\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7608:7727   */\n    tag_204:\n        /* \"#utility.yul\":7787:7788   */\n      0x00\n        /* \"#utility.yul\":7776:7785   */\n      dup3\n        /* \"#utility.yul\":7772:7789   */\n      add\n        /* \"#utility.yul\":7766:7790   */\n      mload\n        /* \"#utility.yul\":7817:7835   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7809:7815   */\n      dup2\n        /* \"#utility.yul\":7806:7836   */\n      gt\n        /* \"#utility.yul\":7803:7920   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":7839:7918   */\n      tag_207\n      tag_78\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7803:7920   */\n    tag_206:\n        /* \"#utility.yul\":7944:8033   */\n      tag_208\n        /* \"#utility.yul\":8025:8032   */\n      dup5\n        /* \"#utility.yul\":8016:8022   */\n      dup3\n        /* \"#utility.yul\":8005:8014   */\n      dup6\n        /* \"#utility.yul\":8001:8023   */\n      add\n        /* \"#utility.yul\":7944:8033   */\n      tag_101\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7934:8033   */\n      swap2\n      pop\n        /* \"#utility.yul\":7737:8043   */\n      pop\n        /* \"#utility.yul\":7496:8050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8056:8236   */\n    tag_41:\n        /* \"#utility.yul\":8104:8181   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8101:8102   */\n      0x00\n        /* \"#utility.yul\":8094:8182   */\n      mstore\n        /* \"#utility.yul\":8201:8205   */\n      0x32\n        /* \"#utility.yul\":8198:8199   */\n      0x04\n        /* \"#utility.yul\":8191:8206   */\n      mstore\n        /* \"#utility.yul\":8225:8229   */\n      0x24\n        /* \"#utility.yul\":8222:8223   */\n      0x00\n        /* \"#utility.yul\":8215:8230   */\n      revert\n        /* \"#utility.yul\":8242:8422   */\n    tag_102:\n        /* \"#utility.yul\":8290:8367   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8287:8288   */\n      0x00\n        /* \"#utility.yul\":8280:8368   */\n      mstore\n        /* \"#utility.yul\":8387:8391   */\n      0x11\n        /* \"#utility.yul\":8384:8385   */\n      0x04\n        /* \"#utility.yul\":8377:8392   */\n      mstore\n        /* \"#utility.yul\":8411:8415   */\n      0x24\n        /* \"#utility.yul\":8408:8409   */\n      0x00\n        /* \"#utility.yul\":8401:8416   */\n      revert\n        /* \"#utility.yul\":8428:8619   */\n    tag_48:\n        /* \"#utility.yul\":8468:8471   */\n      0x00\n        /* \"#utility.yul\":8487:8507   */\n      tag_212\n        /* \"#utility.yul\":8505:8506   */\n      dup3\n        /* \"#utility.yul\":8487:8507   */\n      tag_83\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8482:8507   */\n      swap2\n      pop\n        /* \"#utility.yul\":8521:8541   */\n      tag_213\n        /* \"#utility.yul\":8539:8540   */\n      dup4\n        /* \"#utility.yul\":8521:8541   */\n      tag_83\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8516:8541   */\n      swap3\n      pop\n        /* \"#utility.yul\":8564:8565   */\n      dup3\n        /* \"#utility.yul\":8561:8562   */\n      dup3\n        /* \"#utility.yul\":8557:8566   */\n      add\n        /* \"#utility.yul\":8550:8566   */\n      swap1\n      pop\n        /* \"#utility.yul\":8585:8588   */\n      dup1\n        /* \"#utility.yul\":8582:8583   */\n      dup3\n        /* \"#utility.yul\":8579:8589   */\n      gt\n        /* \"#utility.yul\":8576:8612   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":8592:8610   */\n      tag_215\n      tag_102\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8576:8612   */\n    tag_214:\n        /* \"#utility.yul\":8428:8619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8625:8858   */\n    tag_50:\n        /* \"#utility.yul\":8664:8667   */\n      0x00\n        /* \"#utility.yul\":8687:8711   */\n      tag_217\n        /* \"#utility.yul\":8705:8710   */\n      dup3\n        /* \"#utility.yul\":8687:8711   */\n      tag_83\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8678:8711   */\n      swap2\n      pop\n        /* \"#utility.yul\":8733:8799   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8726:8731   */\n      dup3\n        /* \"#utility.yul\":8723:8800   */\n      sub\n        /* \"#utility.yul\":8720:8823   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":8803:8821   */\n      tag_219\n      tag_102\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8720:8823   */\n    tag_218:\n        /* \"#utility.yul\":8850:8851   */\n      0x01\n        /* \"#utility.yul\":8843:8848   */\n      dup3\n        /* \"#utility.yul\":8839:8852   */\n      add\n        /* \"#utility.yul\":8832:8852   */\n      swap1\n      pop\n        /* \"#utility.yul\":8625:8858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:8950   */\n    tag_103:\n        /* \"#utility.yul\":8899:8906   */\n      0x00\n        /* \"#utility.yul\":8939:8943   */\n      0xff\n        /* \"#utility.yul\":8932:8937   */\n      dup3\n        /* \"#utility.yul\":8928:8944   */\n      and\n        /* \"#utility.yul\":8917:8944   */\n      swap1\n      pop\n        /* \"#utility.yul\":8864:8950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8956:9074   */\n    tag_104:\n        /* \"#utility.yul\":9027:9049   */\n      tag_222\n        /* \"#utility.yul\":9043:9048   */\n      dup2\n        /* \"#utility.yul\":9027:9049   */\n      tag_103\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9020:9025   */\n      dup2\n        /* \"#utility.yul\":9017:9050   */\n      eq\n        /* \"#utility.yul\":9007:9068   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9061:9062   */\n      dup1\n        /* \"#utility.yul\":9054:9066   */\n      revert\n        /* \"#utility.yul\":9007:9068   */\n    tag_223:\n        /* \"#utility.yul\":8956:9074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9219   */\n    tag_105:\n        /* \"#utility.yul\":9135:9140   */\n      0x00\n        /* \"#utility.yul\":9166:9172   */\n      dup2\n        /* \"#utility.yul\":9160:9173   */\n      mload\n        /* \"#utility.yul\":9151:9173   */\n      swap1\n      pop\n        /* \"#utility.yul\":9182:9213   */\n      tag_225\n        /* \"#utility.yul\":9207:9212   */\n      dup2\n        /* \"#utility.yul\":9182:9213   */\n      tag_104\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9080:9219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9225:9572   */\n    tag_57:\n        /* \"#utility.yul\":9293:9299   */\n      0x00\n        /* \"#utility.yul\":9342:9344   */\n      0x20\n        /* \"#utility.yul\":9330:9339   */\n      dup3\n        /* \"#utility.yul\":9321:9328   */\n      dup5\n        /* \"#utility.yul\":9317:9340   */\n      sub\n        /* \"#utility.yul\":9313:9345   */\n      slt\n        /* \"#utility.yul\":9310:9429   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":9348:9427   */\n      tag_228\n      tag_77\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9310:9429   */\n    tag_227:\n        /* \"#utility.yul\":9468:9469   */\n      0x00\n        /* \"#utility.yul\":9493:9555   */\n      tag_229\n        /* \"#utility.yul\":9547:9554   */\n      dup5\n        /* \"#utility.yul\":9538:9544   */\n      dup3\n        /* \"#utility.yul\":9527:9536   */\n      dup6\n        /* \"#utility.yul\":9523:9545   */\n      add\n        /* \"#utility.yul\":9493:9555   */\n      tag_105\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9483:9555   */\n      swap2\n      pop\n        /* \"#utility.yul\":9439:9565   */\n      pop\n        /* \"#utility.yul\":9225:9572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9578:9910   */\n    tag_59:\n        /* \"#utility.yul\":9699:9703   */\n      0x00\n        /* \"#utility.yul\":9737:9739   */\n      0x40\n        /* \"#utility.yul\":9726:9735   */\n      dup3\n        /* \"#utility.yul\":9722:9740   */\n      add\n        /* \"#utility.yul\":9714:9740   */\n      swap1\n      pop\n        /* \"#utility.yul\":9750:9821   */\n      tag_231\n        /* \"#utility.yul\":9818:9819   */\n      0x00\n        /* \"#utility.yul\":9807:9816   */\n      dup4\n        /* \"#utility.yul\":9803:9820   */\n      add\n        /* \"#utility.yul\":9794:9800   */\n      dup6\n        /* \"#utility.yul\":9750:9821   */\n      tag_87\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9831:9903   */\n      tag_232\n        /* \"#utility.yul\":9899:9901   */\n      0x20\n        /* \"#utility.yul\":9888:9897   */\n      dup4\n        /* \"#utility.yul\":9884:9902   */\n      add\n        /* \"#utility.yul\":9875:9881   */\n      dup5\n        /* \"#utility.yul\":9831:9903   */\n      tag_87\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":9578:9910   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:10021   */\n    tag_106:\n        /* \"#utility.yul\":9952:9959   */\n      0x00\n        /* \"#utility.yul\":9992:10014   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9985:9990   */\n      dup3\n        /* \"#utility.yul\":9981:10015   */\n      and\n        /* \"#utility.yul\":9970:10015   */\n      swap1\n      pop\n        /* \"#utility.yul\":9916:10021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10147   */\n    tag_107:\n        /* \"#utility.yul\":10099:10122   */\n      tag_235\n        /* \"#utility.yul\":10116:10121   */\n      dup2\n        /* \"#utility.yul\":10099:10122   */\n      tag_106\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10092:10097   */\n      dup2\n        /* \"#utility.yul\":10089:10123   */\n      eq\n        /* \"#utility.yul\":10079:10141   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10134:10135   */\n      dup1\n        /* \"#utility.yul\":10127:10139   */\n      revert\n        /* \"#utility.yul\":10079:10141   */\n    tag_236:\n        /* \"#utility.yul\":10027:10147   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10153:10294   */\n    tag_108:\n        /* \"#utility.yul\":10209:10214   */\n      0x00\n        /* \"#utility.yul\":10240:10246   */\n      dup2\n        /* \"#utility.yul\":10234:10247   */\n      mload\n        /* \"#utility.yul\":10225:10247   */\n      swap1\n      pop\n        /* \"#utility.yul\":10256:10288   */\n      tag_238\n        /* \"#utility.yul\":10282:10287   */\n      dup2\n        /* \"#utility.yul\":10256:10288   */\n      tag_107\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":10153:10294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10300:10376   */\n    tag_109:\n        /* \"#utility.yul\":10336:10343   */\n      0x00\n        /* \"#utility.yul\":10365:10370   */\n      dup2\n        /* \"#utility.yul\":10354:10370   */\n      swap1\n      pop\n        /* \"#utility.yul\":10300:10376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10382:10502   */\n    tag_110:\n        /* \"#utility.yul\":10454:10477   */\n      tag_241\n        /* \"#utility.yul\":10471:10476   */\n      dup2\n        /* \"#utility.yul\":10454:10477   */\n      tag_109\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10447:10452   */\n      dup2\n        /* \"#utility.yul\":10444:10478   */\n      eq\n        /* \"#utility.yul\":10434:10496   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":10492:10493   */\n      0x00\n        /* \"#utility.yul\":10489:10490   */\n      dup1\n        /* \"#utility.yul\":10482:10494   */\n      revert\n        /* \"#utility.yul\":10434:10496   */\n    tag_242:\n        /* \"#utility.yul\":10382:10502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10508:10649   */\n    tag_111:\n        /* \"#utility.yul\":10564:10569   */\n      0x00\n        /* \"#utility.yul\":10595:10601   */\n      dup2\n        /* \"#utility.yul\":10589:10602   */\n      mload\n        /* \"#utility.yul\":10580:10602   */\n      swap1\n      pop\n        /* \"#utility.yul\":10611:10643   */\n      tag_244\n        /* \"#utility.yul\":10637:10642   */\n      dup2\n        /* \"#utility.yul\":10611:10643   */\n      tag_110\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":10508:10649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10655:11626   */\n    tag_63:\n        /* \"#utility.yul\":10758:10764   */\n      0x00\n        /* \"#utility.yul\":10766:10772   */\n      dup1\n        /* \"#utility.yul\":10774:10780   */\n      0x00\n        /* \"#utility.yul\":10782:10788   */\n      dup1\n        /* \"#utility.yul\":10790:10796   */\n      0x00\n        /* \"#utility.yul\":10839:10842   */\n      0xa0\n        /* \"#utility.yul\":10827:10836   */\n      dup7\n        /* \"#utility.yul\":10818:10825   */\n      dup9\n        /* \"#utility.yul\":10814:10837   */\n      sub\n        /* \"#utility.yul\":10810:10843   */\n      slt\n        /* \"#utility.yul\":10807:10927   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":10846:10925   */\n      tag_247\n      tag_77\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":10807:10927   */\n    tag_246:\n        /* \"#utility.yul\":10966:10967   */\n      0x00\n        /* \"#utility.yul\":10991:11054   */\n      tag_248\n        /* \"#utility.yul\":11046:11053   */\n      dup9\n        /* \"#utility.yul\":11037:11043   */\n      dup3\n        /* \"#utility.yul\":11026:11035   */\n      dup10\n        /* \"#utility.yul\":11022:11044   */\n      add\n        /* \"#utility.yul\":10991:11054   */\n      tag_108\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":10981:11054   */\n      swap6\n      pop\n        /* \"#utility.yul\":10937:11064   */\n      pop\n        /* \"#utility.yul\":11103:11105   */\n      0x20\n        /* \"#utility.yul\":11129:11192   */\n      tag_249\n        /* \"#utility.yul\":11184:11191   */\n      dup9\n        /* \"#utility.yul\":11175:11181   */\n      dup3\n        /* \"#utility.yul\":11164:11173   */\n      dup10\n        /* \"#utility.yul\":11160:11182   */\n      add\n        /* \"#utility.yul\":11129:11192   */\n      tag_111\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":11119:11192   */\n      swap5\n      pop\n        /* \"#utility.yul\":11074:11202   */\n      pop\n        /* \"#utility.yul\":11241:11243   */\n      0x40\n        /* \"#utility.yul\":11267:11331   */\n      tag_250\n        /* \"#utility.yul\":11323:11330   */\n      dup9\n        /* \"#utility.yul\":11314:11320   */\n      dup3\n        /* \"#utility.yul\":11303:11312   */\n      dup10\n        /* \"#utility.yul\":11299:11321   */\n      add\n        /* \"#utility.yul\":11267:11331   */\n      tag_99\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":11257:11331   */\n      swap4\n      pop\n        /* \"#utility.yul\":11212:11341   */\n      pop\n        /* \"#utility.yul\":11380:11382   */\n      0x60\n        /* \"#utility.yul\":11406:11470   */\n      tag_251\n        /* \"#utility.yul\":11462:11469   */\n      dup9\n        /* \"#utility.yul\":11453:11459   */\n      dup3\n        /* \"#utility.yul\":11442:11451   */\n      dup10\n        /* \"#utility.yul\":11438:11460   */\n      add\n        /* \"#utility.yul\":11406:11470   */\n      tag_99\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":11396:11470   */\n      swap3\n      pop\n        /* \"#utility.yul\":11351:11480   */\n      pop\n        /* \"#utility.yul\":11519:11522   */\n      0x80\n        /* \"#utility.yul\":11546:11609   */\n      tag_252\n        /* \"#utility.yul\":11601:11608   */\n      dup9\n        /* \"#utility.yul\":11592:11598   */\n      dup3\n        /* \"#utility.yul\":11581:11590   */\n      dup10\n        /* \"#utility.yul\":11577:11599   */\n      add\n        /* \"#utility.yul\":11546:11609   */\n      tag_108\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":11536:11609   */\n      swap2\n      pop\n        /* \"#utility.yul\":11490:11619   */\n      pop\n        /* \"#utility.yul\":10655:11626   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11632:11734   */\n    tag_112:\n        /* \"#utility.yul\":11674:11682   */\n      0x00\n        /* \"#utility.yul\":11721:11726   */\n      dup2\n        /* \"#utility.yul\":11718:11719   */\n      0x01\n        /* \"#utility.yul\":11714:11727   */\n      shr\n        /* \"#utility.yul\":11693:11727   */\n      swap1\n      pop\n        /* \"#utility.yul\":11632:11734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11740:12588   */\n    tag_113:\n        /* \"#utility.yul\":11801:11806   */\n      0x00\n        /* \"#utility.yul\":11808:11812   */\n      dup1\n        /* \"#utility.yul\":11832:11838   */\n      dup3\n        /* \"#utility.yul\":11823:11838   */\n      swap2\n      pop\n        /* \"#utility.yul\":11856:11861   */\n      dup4\n        /* \"#utility.yul\":11847:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11870:12582   */\n    tag_255:\n        /* \"#utility.yul\":11891:11892   */\n      0x01\n        /* \"#utility.yul\":11881:11889   */\n      dup6\n        /* \"#utility.yul\":11878:11893   */\n      gt\n        /* \"#utility.yul\":11870:12582   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":11986:11990   */\n      dup1\n        /* \"#utility.yul\":11981:11984   */\n      dup7\n        /* \"#utility.yul\":11977:11991   */\n      div\n        /* \"#utility.yul\":11971:11975   */\n      dup2\n        /* \"#utility.yul\":11968:11992   */\n      gt\n        /* \"#utility.yul\":11965:12015   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":11995:12013   */\n      tag_259\n      tag_102\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":11965:12015   */\n    tag_258:\n        /* \"#utility.yul\":12045:12046   */\n      0x01\n        /* \"#utility.yul\":12035:12043   */\n      dup6\n        /* \"#utility.yul\":12031:12047   */\n      and\n        /* \"#utility.yul\":12028:12479   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":12460:12464   */\n      dup1\n        /* \"#utility.yul\":12453:12458   */\n      dup3\n        /* \"#utility.yul\":12449:12465   */\n      mul\n        /* \"#utility.yul\":12440:12465   */\n      swap2\n      pop\n        /* \"#utility.yul\":12028:12479   */\n    tag_260:\n        /* \"#utility.yul\":12510:12514   */\n      dup1\n        /* \"#utility.yul\":12504:12508   */\n      dup2\n        /* \"#utility.yul\":12500:12515   */\n      mul\n        /* \"#utility.yul\":12492:12515   */\n      swap1\n      pop\n        /* \"#utility.yul\":12540:12572   */\n      tag_261\n        /* \"#utility.yul\":12563:12571   */\n      dup6\n        /* \"#utility.yul\":12540:12572   */\n      tag_112\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":12528:12572   */\n      swap5\n      pop\n        /* \"#utility.yul\":11870:12582   */\n      jump(tag_255)\n    tag_257:\n        /* \"#utility.yul\":11740:12588   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12594:13667   */\n    tag_114:\n        /* \"#utility.yul\":12648:12653   */\n      0x00\n        /* \"#utility.yul\":12839:12847   */\n      dup3\n        /* \"#utility.yul\":12829:12869   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":12860:12861   */\n      0x01\n        /* \"#utility.yul\":12851:12861   */\n      swap1\n      pop\n        /* \"#utility.yul\":12862:12867   */\n      jump(tag_262)\n        /* \"#utility.yul\":12829:12869   */\n    tag_263:\n        /* \"#utility.yul\":12888:12892   */\n      dup2\n        /* \"#utility.yul\":12878:12914   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":12905:12906   */\n      0x00\n        /* \"#utility.yul\":12896:12906   */\n      swap1\n      pop\n        /* \"#utility.yul\":12907:12912   */\n      jump(tag_262)\n        /* \"#utility.yul\":12878:12914   */\n    tag_264:\n        /* \"#utility.yul\":12974:12978   */\n      dup2\n        /* \"#utility.yul\":13022:13023   */\n      0x01\n        /* \"#utility.yul\":13017:13044   */\n      dup2\n      eq\n      tag_266\n      jumpi\n        /* \"#utility.yul\":13058:13059   */\n      0x02\n        /* \"#utility.yul\":13053:13244   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"#utility.yul\":12967:13244   */\n      jump(tag_265)\n        /* \"#utility.yul\":13017:13044   */\n    tag_266:\n        /* \"#utility.yul\":13035:13036   */\n      0x01\n        /* \"#utility.yul\":13026:13036   */\n      swap2\n      pop\n        /* \"#utility.yul\":13037:13042   */\n      pop\n      jump(tag_262)\n        /* \"#utility.yul\":13053:13244   */\n    tag_267:\n        /* \"#utility.yul\":13098:13101   */\n      0xff\n        /* \"#utility.yul\":13088:13096   */\n      dup5\n        /* \"#utility.yul\":13085:13102   */\n      gt\n        /* \"#utility.yul\":13082:13125   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":13105:13123   */\n      tag_269\n      tag_102\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":13082:13125   */\n    tag_268:\n        /* \"#utility.yul\":13154:13162   */\n      dup4\n        /* \"#utility.yul\":13151:13152   */\n      0x02\n        /* \"#utility.yul\":13147:13163   */\n      exp\n        /* \"#utility.yul\":13138:13163   */\n      swap2\n      pop\n        /* \"#utility.yul\":13189:13192   */\n      dup5\n        /* \"#utility.yul\":13182:13187   */\n      dup3\n        /* \"#utility.yul\":13179:13193   */\n      gt\n        /* \"#utility.yul\":13176:13216   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":13196:13214   */\n      tag_271\n      tag_102\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":13176:13216   */\n    tag_270:\n        /* \"#utility.yul\":13229:13234   */\n      pop\n      jump(tag_262)\n        /* \"#utility.yul\":12967:13244   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":13353:13355   */\n      0x20\n        /* \"#utility.yul\":13343:13351   */\n      dup4\n        /* \"#utility.yul\":13340:13356   */\n      lt\n        /* \"#utility.yul\":13334:13337   */\n      0x0133\n        /* \"#utility.yul\":13328:13332   */\n      dup4\n        /* \"#utility.yul\":13325:13338   */\n      lt\n        /* \"#utility.yul\":13321:13357   */\n      and\n        /* \"#utility.yul\":13303:13305   */\n      0x4e\n        /* \"#utility.yul\":13293:13301   */\n      dup5\n        /* \"#utility.yul\":13290:13306   */\n      lt\n        /* \"#utility.yul\":13285:13287   */\n      0x0b\n        /* \"#utility.yul\":13279:13283   */\n      dup5\n        /* \"#utility.yul\":13276:13288   */\n      lt\n        /* \"#utility.yul\":13272:13307   */\n      and\n        /* \"#utility.yul\":13256:13367   */\n      or\n        /* \"#utility.yul\":13253:13499   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":13409:13417   */\n      dup3\n        /* \"#utility.yul\":13403:13407   */\n      dup3\n        /* \"#utility.yul\":13399:13418   */\n      exp\n        /* \"#utility.yul\":13390:13418   */\n      swap1\n      pop\n        /* \"#utility.yul\":13444:13447   */\n      dup4\n        /* \"#utility.yul\":13437:13442   */\n      dup2\n        /* \"#utility.yul\":13434:13448   */\n      gt\n        /* \"#utility.yul\":13431:13471   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":13451:13469   */\n      tag_274\n      tag_102\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":13431:13471   */\n    tag_273:\n        /* \"#utility.yul\":13484:13489   */\n      jump(tag_262)\n        /* \"#utility.yul\":13253:13499   */\n    tag_272:\n        /* \"#utility.yul\":13524:13566   */\n      tag_275\n        /* \"#utility.yul\":13562:13565   */\n      dup5\n        /* \"#utility.yul\":13552:13560   */\n      dup5\n        /* \"#utility.yul\":13546:13550   */\n      dup5\n        /* \"#utility.yul\":13543:13544   */\n      0x01\n        /* \"#utility.yul\":13524:13566   */\n      tag_113\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":13509:13566   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":13598:13602   */\n      dup2\n        /* \"#utility.yul\":13593:13596   */\n      dup5\n        /* \"#utility.yul\":13589:13603   */\n      div\n        /* \"#utility.yul\":13582:13587   */\n      dup2\n        /* \"#utility.yul\":13579:13604   */\n      gt\n        /* \"#utility.yul\":13576:13627   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":13607:13625   */\n      tag_277\n      tag_102\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":13576:13627   */\n    tag_276:\n        /* \"#utility.yul\":13656:13660   */\n      dup2\n        /* \"#utility.yul\":13649:13654   */\n      dup2\n        /* \"#utility.yul\":13645:13661   */\n      mul\n        /* \"#utility.yul\":13636:13661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12594:13667   */\n    tag_262:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13673:13958   */\n    tag_65:\n        /* \"#utility.yul\":13733:13738   */\n      0x00\n        /* \"#utility.yul\":13757:13780   */\n      tag_279\n        /* \"#utility.yul\":13775:13779   */\n      dup3\n        /* \"#utility.yul\":13757:13780   */\n      tag_83\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":13749:13780   */\n      swap2\n      pop\n        /* \"#utility.yul\":13801:13828   */\n      tag_280\n        /* \"#utility.yul\":13819:13827   */\n      dup4\n        /* \"#utility.yul\":13801:13828   */\n      tag_83\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":13789:13828   */\n      swap3\n      pop\n        /* \"#utility.yul\":13847:13951   */\n      tag_281\n        /* \"#utility.yul\":13884:13950   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13874:13882   */\n      dup5\n        /* \"#utility.yul\":13868:13872   */\n      dup5\n        /* \"#utility.yul\":13847:13951   */\n      tag_114\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":13838:13951   */\n      swap1\n      pop\n        /* \"#utility.yul\":13673:13958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13964:14520   */\n    tag_67:\n        /* \"#utility.yul\":14003:14010   */\n      0x00\n        /* \"#utility.yul\":14026:14045   */\n      tag_283\n        /* \"#utility.yul\":14043:14044   */\n      dup3\n        /* \"#utility.yul\":14026:14045   */\n      tag_109\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":14021:14045   */\n      swap2\n      pop\n        /* \"#utility.yul\":14059:14078   */\n      tag_284\n        /* \"#utility.yul\":14076:14077   */\n      dup4\n        /* \"#utility.yul\":14059:14078   */\n      tag_109\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":14054:14078   */\n      swap3\n      pop\n        /* \"#utility.yul\":14113:14114   */\n      dup3\n        /* \"#utility.yul\":14110:14111   */\n      dup3\n        /* \"#utility.yul\":14106:14115   */\n      mul\n        /* \"#utility.yul\":14135:14164   */\n      tag_285\n        /* \"#utility.yul\":14152:14163   */\n      dup2\n        /* \"#utility.yul\":14135:14164   */\n      tag_109\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":14124:14164   */\n      swap2\n      pop\n        /* \"#utility.yul\":14222:14288   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14219:14220   */\n      dup5\n        /* \"#utility.yul\":14216:14289   */\n      eq\n        /* \"#utility.yul\":14212:14213   */\n      0x00\n        /* \"#utility.yul\":14209:14210   */\n      dup5\n        /* \"#utility.yul\":14205:14214   */\n      slt\n        /* \"#utility.yul\":14201:14290   */\n      and\n        /* \"#utility.yul\":14198:14313   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":14293:14311   */\n      tag_287\n      tag_102\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":14198:14313   */\n    tag_286:\n        /* \"#utility.yul\":14463:14464   */\n      dup3\n        /* \"#utility.yul\":14454:14461   */\n      dup3\n        /* \"#utility.yul\":14449:14465   */\n      sdiv\n        /* \"#utility.yul\":14446:14447   */\n      dup5\n        /* \"#utility.yul\":14443:14466   */\n      eq\n        /* \"#utility.yul\":14423:14424   */\n      dup4\n        /* \"#utility.yul\":14416:14425   */\n      iszero\n        /* \"#utility.yul\":14396:14480   */\n      or\n        /* \"#utility.yul\":14373:14513   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":14493:14511   */\n      tag_289\n      tag_102\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":14373:14513   */\n    tag_288:\n        /* \"#utility.yul\":14011:14520   */\n      pop\n        /* \"#utility.yul\":13964:14520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14526:14706   */\n    tag_74:\n        /* \"#utility.yul\":14574:14651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14571:14572   */\n      0x00\n        /* \"#utility.yul\":14564:14652   */\n      mstore\n        /* \"#utility.yul\":14671:14675   */\n      0x12\n        /* \"#utility.yul\":14668:14669   */\n      0x04\n        /* \"#utility.yul\":14661:14676   */\n      mstore\n        /* \"#utility.yul\":14695:14699   */\n      0x24\n        /* \"#utility.yul\":14692:14693   */\n      0x00\n        /* \"#utility.yul\":14685:14700   */\n      revert\n        /* \"#utility.yul\":14712:14897   */\n    tag_69:\n        /* \"#utility.yul\":14752:14753   */\n      0x00\n        /* \"#utility.yul\":14769:14789   */\n      tag_292\n        /* \"#utility.yul\":14787:14788   */\n      dup3\n        /* \"#utility.yul\":14769:14789   */\n      tag_83\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":14764:14789   */\n      swap2\n      pop\n        /* \"#utility.yul\":14803:14823   */\n      tag_293\n        /* \"#utility.yul\":14821:14822   */\n      dup4\n        /* \"#utility.yul\":14803:14823   */\n      tag_83\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":14798:14823   */\n      swap3\n      pop\n        /* \"#utility.yul\":14842:14843   */\n      dup3\n        /* \"#utility.yul\":14832:14867   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":14847:14865   */\n      tag_295\n      tag_74\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":14832:14867   */\n    tag_294:\n        /* \"#utility.yul\":14889:14890   */\n      dup3\n        /* \"#utility.yul\":14886:14887   */\n      dup3\n        /* \"#utility.yul\":14882:14891   */\n      div\n        /* \"#utility.yul\":14877:14891   */\n      swap1\n      pop\n        /* \"#utility.yul\":14712:14897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207eb91055f6c1b4fb4c5f4d457449547c36d7f0a8728be5549d44d971d3df6e2d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405162000f9438038062000f94833981810160405281019061003491906100d1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b6100ae81610093565b81146100b957600080fd5b50565b6000815190506100cb816100a5565b92915050565b6000602082840312156100e7576100e661006e565b5b60006100f5848285016100bc565b91505092915050565b608051610e74620001206000396000818160c801526102da0152610e746000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306cd702c1461004657806308a130ab14610076578063fc57d4df14610094575b600080fd5b610060600480360381019061005b91906105f3565b6100c4565b60405161006d9190610642565b60405180910390f35b61007e6102d8565b60405161008b919061066c565b60405180910390f35b6100ae60048036038101906100a99190610687565b6102fc565b6040516100bb9190610642565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610129576101228361030e565b90506102d2565b60008373ffffffffffffffffffffffffffffffffffffffff1663d3c9cc26846040518263ffffffff1660e01b81526004016101649190610642565b600060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101aa9190610822565b905060008473ffffffffffffffffffffffffffffffffffffffff166359f7cf50856040518263ffffffff1660e01b81526004016101e79190610642565b600060405180830381865afa158015610204573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061022d9190610943565b90506000808351905060005b818110156102c95760006102668683815181106102595761025861098c565b5b602002602001015161030e565b9050600081146102b5576102a78583815181106102865761028561098c565b5b6020026020010151670de0b6b3a7640000836104709092919063ffffffff16565b846102b291906109ea565b93505b5080806102c190610a1e565b915050610239565b50819450505050505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103078261030e565b9050919050565b600080610348905060007347fb2585d2c56fe188d0e6ec628a38b74fceeedf73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610a9f565b905060007347fb2585d2c56fe188d0e6ec628a38b74fceeedf73ffffffffffffffffffffffffffffffffffffffff1663bcfd032d86856040518363ffffffff1660e01b81526004016103ee929190610acc565b60a060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190610b6d565b5050509150508160ff16600a6104459190610d1b565b6a52b7d2dcc80cd2e40000008261045c9190610d66565b6104669190610e0d565b9350505050919050565b60008060008019858709858702925082811083820303915050600081036104ab578382816104a1576104a0610dde565b5b0492505050610544565b8084116104b757600080fd5b60008486880990508281118203915080830392506000600186190186169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058a8261055f565b9050919050565b61059a8161057f565b81146105a557600080fd5b50565b6000813590506105b781610591565b92915050565b6000819050919050565b6105d0816105bd565b81146105db57600080fd5b50565b6000813590506105ed816105c7565b92915050565b6000806040838503121561060a57610609610555565b5b6000610618858286016105a8565b9250506020610629858286016105de565b9150509250929050565b61063c816105bd565b82525050565b60006020820190506106576000830184610633565b92915050565b6106668161057f565b82525050565b6000602082019050610681600083018461065d565b92915050565b60006020828403121561069d5761069c610555565b5b60006106ab848285016105a8565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610702826106b9565b810181811067ffffffffffffffff82111715610721576107206106ca565b5b80604052505050565b600061073461054b565b905061074082826106f9565b919050565b600067ffffffffffffffff8211156107605761075f6106ca565b5b602082029050602081019050919050565b600080fd5b60008151905061078581610591565b92915050565b600061079e61079984610745565b61072a565b905080838252602082019050602084028301858111156107c1576107c0610771565b5b835b818110156107ea57806107d68882610776565b8452602084019350506020810190506107c3565b5050509392505050565b600082601f830112610809576108086106b4565b5b815161081984826020860161078b565b91505092915050565b60006020828403121561083857610837610555565b5b600082015167ffffffffffffffff8111156108565761085561055a565b5b610862848285016107f4565b91505092915050565b600067ffffffffffffffff821115610886576108856106ca565b5b602082029050602081019050919050565b6000815190506108a6816105c7565b92915050565b60006108bf6108ba8461086b565b61072a565b905080838252602082019050602084028301858111156108e2576108e1610771565b5b835b8181101561090b57806108f78882610897565b8452602084019350506020810190506108e4565b5050509392505050565b600082601f83011261092a576109296106b4565b5b815161093a8482602086016108ac565b91505092915050565b60006020828403121561095957610958610555565b5b600082015167ffffffffffffffff8111156109775761097661055a565b5b61098384828501610915565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f5826105bd565b9150610a00836105bd565b9250828201905080821115610a1857610a176109bb565b5b92915050565b6000610a29826105bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5b57610a5a6109bb565b5b600182019050919050565b600060ff82169050919050565b610a7c81610a66565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b600060208284031215610ab557610ab4610555565b5b6000610ac384828501610a8a565b91505092915050565b6000604082019050610ae1600083018561065d565b610aee602083018461065d565b9392505050565b600069ffffffffffffffffffff82169050919050565b610b1481610af5565b8114610b1f57600080fd5b50565b600081519050610b3181610b0b565b92915050565b6000819050919050565b610b4a81610b37565b8114610b5557600080fd5b50565b600081519050610b6781610b41565b92915050565b600080600080600060a08688031215610b8957610b88610555565b5b6000610b9788828901610b22565b9550506020610ba888828901610b58565b9450506040610bb988828901610897565b9350506060610bca88828901610897565b9250506080610bdb88828901610b22565b9150509295509295909350565b60008160011c9050919050565b6000808291508390505b6001851115610c3f57808604811115610c1b57610c1a6109bb565b5b6001851615610c2a5780820291505b8081029050610c3885610be8565b9450610bff565b94509492505050565b600082610c585760019050610d14565b81610c665760009050610d14565b8160018114610c7c5760028114610c8657610cb5565b6001915050610d14565b60ff841115610c9857610c976109bb565b5b8360020a915084821115610caf57610cae6109bb565b5b50610d14565b5060208310610133831016604e8410600b8410161715610cea5782820a905083811115610ce557610ce46109bb565b5b610d14565b610cf78484846001610bf5565b92509050818404811115610d0e57610d0d6109bb565b5b81810290505b9392505050565b6000610d26826105bd565b9150610d31836105bd565b9250610d5e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c48565b905092915050565b6000610d7182610b37565b9150610d7c83610b37565b9250828202610d8a81610b37565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc257610dc16109bb565b5b8282058414831517610dd757610dd66109bb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e18826105bd565b9150610e23836105bd565b925082610e3357610e32610dde565b5b82820490509291505056fea26469706673582212207eb91055f6c1b4fb4c5f4d457449547c36d7f0a8728be5549d44d971d3df6e2d64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF94 CODESIZE SUB DUP1 PUSH3 0xF94 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x34 SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP3 PUSH2 0x73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE DUP2 PUSH2 0x93 JUMP JUMPDEST DUP2 EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB DUP2 PUSH2 0xA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7 JUMPI PUSH2 0xE6 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5 DUP5 DUP3 DUP6 ADD PUSH2 0xBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xE74 PUSH3 0x120 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xC8 ADD MSTORE PUSH2 0x2DA ADD MSTORE PUSH2 0xE74 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CD702C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8A130AB EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFC57D4DF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129 JUMPI PUSH2 0x122 DUP4 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3C9CC26 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x59F7CF50 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 PUSH2 0x266 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2B5 JUMPI PUSH2 0x2A7 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x470 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST SWAP4 POP JUMPDEST POP DUP1 DUP1 PUSH2 0x2C1 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x239 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307 DUP3 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x348 SWAP1 POP PUSH1 0x0 PUSH20 0x47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBCFD032D DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP3 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP2 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x4AB JUMPI DUP4 DUP3 DUP2 PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x544 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x57F JUMP JUMPDEST DUP2 EQ PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B7 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x5BD JUMP JUMPDEST DUP2 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5ED DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP6 DUP3 DUP7 ADD PUSH2 0x5A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x629 DUP6 DUP3 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x63C DUP2 PUSH2 0x5BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x57F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x65D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP5 DUP3 DUP6 ADD PUSH2 0x5A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x702 DUP3 PUSH2 0x6B9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x721 JUMPI PUSH2 0x720 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH2 0x740 DUP3 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x6CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x785 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH2 0x799 DUP5 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0x771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI DUP1 PUSH2 0x7D6 DUP9 DUP3 PUSH2 0x776 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x819 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x78B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x55A JUMP JUMPDEST JUMPDEST PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x7F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A6 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH2 0x8BA DUP5 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90B JUMPI DUP1 PUSH2 0x8F7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x93A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI PUSH2 0x976 PUSH2 0x55A JUMP JUMPDEST JUMPDEST PUSH2 0x983 DUP5 DUP3 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9F5 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA17 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x65D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xAF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB31 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4A DUP2 PUSH2 0xB37 JUMP JUMPDEST DUP2 EQ PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB67 DUP2 PUSH2 0xB41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB88 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB97 DUP9 DUP3 DUP10 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBA8 DUP9 DUP3 DUP10 ADD PUSH2 0xB58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBB9 DUP9 DUP3 DUP10 ADD PUSH2 0x897 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xBCA DUP9 DUP3 DUP10 ADD PUSH2 0x897 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xBDB DUP9 DUP3 DUP10 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xC3F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xC2A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xC38 DUP6 PUSH2 0xBE8 JUMP JUMPDEST SWAP5 POP PUSH2 0xBFF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC58 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD14 JUMP JUMPDEST DUP2 PUSH2 0xC66 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD14 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC86 JUMPI PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD14 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0x9BB JUMP JUMPDEST JUMPDEST POP PUSH2 0xD14 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xCEA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH2 0xCF7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xBF5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xD31 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP PUSH2 0xD5E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD8A DUP2 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDD7 JUMPI PUSH2 0xDD6 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE18 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xE23 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE33 JUMPI PUSH2 0xE32 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB91055F6C1B4FB4C5F4D457449547C36D7F0A8728BE5549D44D971D3DF6E2D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "936:2708:1:-:0;;;1284:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:8;1324:18;;;;;;;;;;1284:65;936:2708;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;936:2708:1:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Wrapper_565": {
									"entryPoint": 728,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getUnderlyingPrice_718": {
									"entryPoint": 782,
									"id": 718,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBundlePrice_662": {
									"entryPoint": 196,
									"id": 662,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUnderlyingPrice_674": {
									"entryPoint": 764,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mulDiv_212": {
									"entryPoint": 1136,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14900:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:4"
															},
															"nodeType": "YulIf",
															"src": "1290:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"src": "1197:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:4",
														"type": ""
													}
												],
												"src": "1677:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:4",
														"type": ""
													}
												],
												"src": "1801:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2094:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2111:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2134:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2116:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2082:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2089:3:4",
														"type": ""
													}
												],
												"src": "2029:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2273:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2269:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2261:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2341:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2365:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2297:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2297:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2223:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2235:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2246:4:4",
														"type": ""
													}
												],
												"src": "2153:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2447:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2495:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2468:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2477:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:32:4"
															},
															"nodeType": "YulIf",
															"src": "2457:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2586:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2601:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2605:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2630:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2665:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2676:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2661:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2685:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2640:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2630:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2417:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2428:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2440:6:4",
														"type": ""
													}
												],
												"src": "2381:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2805:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2815:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2815:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2815:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2716:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2887:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2897:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2915:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2922:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2931:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2927:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2927:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2907:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2897:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2870:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2880:6:4",
														"type": ""
													}
												],
												"src": "2839:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2995:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2985:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3092:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3113:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3116:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2947:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3176:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3186:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3208:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3238:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3216:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3204:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3190:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3357:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3298:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3310:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3295:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3295:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3334:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3346:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3331:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3292:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:62:4"
															},
															"nodeType": "YulIf",
															"src": "3289:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3397:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3386:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3162:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3170:4:4",
														"type": ""
													}
												],
												"src": "3133:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3471:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3481:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3538:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3510:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3445:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3454:6:4",
														"type": ""
													}
												],
												"src": "3420:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3637:229:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3742:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3744:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3744:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3744:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3711:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:30:4"
															},
															"nodeType": "YulIf",
															"src": "3708:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3774:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3786:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3794:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3782:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:17:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3774:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3836:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3848:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3844:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3621:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3632:4:4",
														"type": ""
													}
												],
												"src": "3555:311:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3872:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4058:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4068:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4083:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4077:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4068:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4126:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4099:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4099:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4036:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4044:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4052:5:4",
														"type": ""
													}
												],
												"src": "3995:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4274:619:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4284:90:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4366:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4309:56:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4309:64:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4293:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:81:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4284:5:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4383:16:4",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4394:5:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4387:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4416:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4409:21:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4439:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4450:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:16:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4439:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4472:44:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4490:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4502:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4510:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4498:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4498:17:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:30:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4476:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4544:103:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4558:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4558:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4531:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4539:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4528:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:15:4"
															},
															"nodeType": "YulIf",
															"src": "4525:122:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4732:155:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4747:21:4",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:4"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4751:10:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4789:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4826:10:4"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4838:3:4"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "4794:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4794:48:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4782:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4782:61:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:61:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4856:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4867:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4872:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4863:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4863:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4856:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4685:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4690:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4682:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4698:25:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4700:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4711:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4716:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4707:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4707:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4660:21:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4662:17:4",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4673:6:4"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4666:3:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4656:231:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4244:6:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4252:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4260:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4268:5:4",
														"type": ""
													}
												],
												"src": "4161:732:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:297:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5053:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5055:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5055:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5055:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5032:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5040:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5028:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5028:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5047:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:35:4"
															},
															"nodeType": "YulIf",
															"src": "5014:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5145:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5165:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5159:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5149:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5181:114:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5276:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5283:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5291:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5190:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:105:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5181:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4982:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4990:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4998:5:4",
														"type": ""
													}
												],
												"src": "4916:385:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5409:452:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5455:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5457:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5457:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5457:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5430:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5426:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5422:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5422:32:4"
															},
															"nodeType": "YulIf",
															"src": "5419:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5548:306:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5563:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5587:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5598:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5583:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5583:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5577:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5577:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5567:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5648:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5650:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5650:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5650:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5620:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5628:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5617:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5617:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "5614:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5745:99:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5755:56:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5755:89:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5745:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5379:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5390:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5402:6:4",
														"type": ""
													}
												],
												"src": "5307:554:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5949:229:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6054:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6056:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6056:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6056:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6026:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6034:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:30:4"
															},
															"nodeType": "YulIf",
															"src": "6020:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6086:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6098:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6106:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6094:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:17:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6086:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6148:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6160:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6166:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6156:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6148:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5933:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5944:4:4",
														"type": ""
													}
												],
												"src": "5867:311:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6247:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6257:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6272:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6266:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6257:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6315:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6288:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6225:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6233:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6241:5:4",
														"type": ""
													}
												],
												"src": "6184:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6463:619:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6473:90:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6555:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6498:56:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:64:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6482:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:81:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6473:5:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:16:4",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6583:5:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6576:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6605:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6612:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6598:21:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6628:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6639:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6646:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:16:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6628:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6661:44:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6679:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:17:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:30:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6665:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6733:103:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6747:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6747:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6747:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6720:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6728:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6717:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:15:4"
															},
															"nodeType": "YulIf",
															"src": "6714:122:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6921:155:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6936:21:4",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:4"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6940:10:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6978:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "7015:10:4"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7027:3:4"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "6983:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6983:48:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6971:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6971:61:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6971:61:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7045:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7056:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7061:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7052:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7052:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7045:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6874:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6879:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6871:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6887:25:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6889:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6900:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6905:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6896:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6896:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6889:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6849:21:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6851:17:4",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6862:6:4"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6855:3:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6845:231:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6433:6:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6441:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6449:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6457:5:4",
														"type": ""
													}
												],
												"src": "6350:732:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7193:297:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7242:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7244:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7244:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7244:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7221:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7229:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7217:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7217:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7236:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7213:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7213:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:35:4"
															},
															"nodeType": "YulIf",
															"src": "7203:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7334:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7348:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7338:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7370:114:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7457:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7465:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7453:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7453:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7472:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7480:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "7379:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7379:105:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7370:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7171:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7179:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7187:5:4",
														"type": ""
													}
												],
												"src": "7105:385:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:452:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7644:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7646:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7646:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7646:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7619:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7628:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7611:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:32:4"
															},
															"nodeType": "YulIf",
															"src": "7608:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7737:306:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7752:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7776:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7787:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7772:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7772:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7766:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7756:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7837:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7839:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7839:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7839:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7809:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7817:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7806:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7806:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "7803:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7934:99:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8005:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8016:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8001:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8001:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8025:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7944:56:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:89:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7934:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7568:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7579:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7591:6:4",
														"type": ""
													}
												],
												"src": "7496:554:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8084:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8104:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8094:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8094:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8198:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8201:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8222:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8225:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8215:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8215:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8056:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8270:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8287:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8290:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8280:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8384:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8387:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8377:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8377:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8408:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8411:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8242:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8472:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8482:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8505:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8487:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8487:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8482:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8516:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8539:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8521:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8516:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8550:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8561:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8564:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8557:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8590:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8592:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8592:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8592:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8582:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8585:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8579:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:10:4"
															},
															"nodeType": "YulIf",
															"src": "8576:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8459:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8462:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8468:3:4",
														"type": ""
													}
												],
												"src": "8428:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8668:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8678:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8705:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8687:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8678:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8801:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8803:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8803:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8803:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8726:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8723:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:77:4"
															},
															"nodeType": "YulIf",
															"src": "8720:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8832:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8843:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8839:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8832:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8654:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8664:3:4",
														"type": ""
													}
												],
												"src": "8625:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8917:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8932:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8939:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8928:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8917:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8889:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8899:7:4",
														"type": ""
													}
												],
												"src": "8864:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8997:77:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9052:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9061:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9064:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9054:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9054:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9054:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9020:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9043:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "9027:15:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9027:22:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9017:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9017:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:41:4"
															},
															"nodeType": "YulIf",
															"src": "9007:61:4"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8990:5:4",
														"type": ""
													}
												],
												"src": "8956:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9141:78:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9151:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9166:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9160:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9151:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9207:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9182:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9182:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9182:31:4"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9119:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9127:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9135:5:4",
														"type": ""
													}
												],
												"src": "9080:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:272:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9346:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9348:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9348:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9348:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9321:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9330:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9317:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9317:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:32:4"
															},
															"nodeType": "YulIf",
															"src": "9310:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "9439:126:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9454:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9468:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9458:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9483:72:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9527:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9538:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9523:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9523:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9547:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9493:29:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:62:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9483:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9270:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9281:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9293:6:4",
														"type": ""
													}
												],
												"src": "9225:347:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9704:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9714:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9722:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9722:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9714:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9794:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9818:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9803:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9750:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9750:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9875:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9888:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9899:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9884:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9884:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9831:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9831:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9668:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9680:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9688:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9699:4:4",
														"type": ""
													}
												],
												"src": "9578:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9960:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9970:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9985:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9992:22:4",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:34:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9970:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9942:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9952:7:4",
														"type": ""
													}
												],
												"src": "9916:105:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10069:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10125:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10134:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10137:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10127:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10127:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10127:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10092:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10116:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "10099:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10099:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10089:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10089:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10082:42:4"
															},
															"nodeType": "YulIf",
															"src": "10079:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10062:5:4",
														"type": ""
													}
												],
												"src": "10027:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10215:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10225:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10240:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10234:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10225:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10282:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "10256:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10256:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10256:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10193:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10201:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10209:5:4",
														"type": ""
													}
												],
												"src": "10153:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10344:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10354:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10365:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10354:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10326:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10336:7:4",
														"type": ""
													}
												],
												"src": "10300:76:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10424:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10480:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10489:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10492:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10482:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10482:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10447:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10471:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "10454:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10454:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10444:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10444:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10437:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10437:42:4"
															},
															"nodeType": "YulIf",
															"src": "10434:62:4"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10417:5:4",
														"type": ""
													}
												],
												"src": "10382:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10570:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10580:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10595:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10589:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10580:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10637:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "10611:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10611:32:4"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10548:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10556:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10564:5:4",
														"type": ""
													}
												],
												"src": "10508:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10797:829:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10844:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10846:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10846:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10846:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10818:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10827:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10839:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10810:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:33:4"
															},
															"nodeType": "YulIf",
															"src": "10807:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "10937:127:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10952:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10966:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10956:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10981:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11026:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11037:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11022:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11022:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11046:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10991:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10991:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10981:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11074:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11089:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11103:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11093:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11119:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11164:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11175:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11160:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11160:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11184:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11129:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11119:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11212:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11227:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11241:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11231:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11257:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11303:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11314:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11299:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11299:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11323:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11267:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11267:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11257:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11351:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11366:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11396:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11442:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11453:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11438:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11438:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11462:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11406:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11406:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11396:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11490:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11505:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11509:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11536:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11546:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11546:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11536:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10735:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10746:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10758:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10766:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10774:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10782:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10790:6:4",
														"type": ""
													}
												],
												"src": "10655:971:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11683:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11693:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11718:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11721:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11714:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:13:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "11693:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11664:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "11674:8:4",
														"type": ""
													}
												],
												"src": "11632:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11813:775:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11823:15:4",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "11832:6:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11823:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11847:14:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "11856:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "11847:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11905:677:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11993:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "11995:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11995:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11995:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11971:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "11981:3:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "11986:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "11977:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11977:14:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11968:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11968:24:4"
																		},
																		"nodeType": "YulIf",
																		"src": "11965:50:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12060:419:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12440:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "12453:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "12460:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "12449:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12449:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12440:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12035:8:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12045:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12031:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12031:16:4"
																		},
																		"nodeType": "YulIf",
																		"src": "12028:451:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12492:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12504:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12510:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "12500:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12500:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "12492:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12528:44:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12563:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "12540:22:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12540:32:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "12528:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11881:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11891:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11878:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11894:2:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11874:3:4",
																"statements": []
															},
															"src": "11870:712:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "11768:6:4",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "11776:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11783:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "11793:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11801:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11808:4:4",
														"type": ""
													}
												],
												"src": "11740:848:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12654:1013:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12849:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12851:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12860:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "12851:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "12862:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12839:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12832:16:4"
															},
															"nodeType": "YulIf",
															"src": "12829:40:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12894:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12896:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12905:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "12896:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "12907:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12888:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12881:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12881:12:4"
															},
															"nodeType": "YulIf",
															"src": "12878:36:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13024:20:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "13026:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13035:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13026:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13037:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13017:27:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13022:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13068:176:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13103:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "13105:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13105:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13105:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13088:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13098:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "13085:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13085:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "13082:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "13138:25:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13151:1:4",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13154:8:4"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "13147:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13147:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13138:5:4"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13194:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "13196:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13196:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13196:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "13182:5:4"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "13189:3:4"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "13179:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13179:14:4"
																				},
																				"nodeType": "YulIf",
																				"src": "13176:40:4"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13229:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13053:191:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13058:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "12974:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "12967:277:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13376:123:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13390:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13403:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13409:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "13399:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13399:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13390:5:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13449:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "13451:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13451:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13451:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "13437:5:4"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "13444:3:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "13434:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13434:14:4"
																		},
																		"nodeType": "YulIf",
																		"src": "13431:40:4"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13484:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13279:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13285:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13276:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13276:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13293:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13303:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13290:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13290:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13328:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13334:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13325:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13325:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13343:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13353:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13340:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13340:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13321:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13256:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:111:4"
															},
															"nodeType": "YulIf",
															"src": "13253:246:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13509:57:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13543:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13546:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13552:8:4"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "13562:3:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "13524:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13524:42:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13509:5:4"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "13516:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13605:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13607:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13607:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13607:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "13582:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "13593:3:4"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "13598:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:14:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13579:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:25:4"
															},
															"nodeType": "YulIf",
															"src": "13576:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "13649:5:4"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13656:4:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:16:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13636:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12624:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12630:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "12640:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12648:5:4",
														"type": ""
													}
												],
												"src": "12594:1073:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13739:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13749:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13775:4:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13757:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:23:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "13749:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13789:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13819:8:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13801:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:27:4"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "13789:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13838:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13868:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13874:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13884:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "13847:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:104:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13838:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13714:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13720:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13733:5:4",
														"type": ""
													}
												],
												"src": "13673:285:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14011:509:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14021:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14043:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "14026:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14026:19:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14021:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14054:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14076:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "14059:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14059:19:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14054:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14087:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14110:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14113:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14106:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14091:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14124:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14152:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "14135:16:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14135:29:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14124:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14291:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14293:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14293:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14293:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14209:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14212:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14205:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14205:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14219:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14222:66:4",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14216:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14216:73:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14201:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14201:89:4"
															},
															"nodeType": "YulIf",
															"src": "14198:115:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14491:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14493:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14493:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14493:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14423:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14416:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14416:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14446:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14454:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14463:1:4"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "14449:4:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14449:16:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14443:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14443:23:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14396:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14396:84:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14376:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14376:114:4"
															},
															"nodeType": "YulIf",
															"src": "14373:140:4"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13994:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13997:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14003:7:4",
														"type": ""
													}
												],
												"src": "13964:556:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14554:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14571:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14574:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14564:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14564:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14564:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14668:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14671:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14661:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14661:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14692:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14695:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14685:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14685:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14685:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14526:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14754:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14764:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14787:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14769:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14769:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14764:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14798:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14821:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14803:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14803:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14798:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14845:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14847:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14847:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14847:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14842:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14835:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14835:9:4"
															},
															"nodeType": "YulIf",
															"src": "14832:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14877:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14886:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14889:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14882:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14882:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14877:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14743:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14746:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14752:1:4",
														"type": ""
													}
												],
												"src": "14712:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"565": [
									{
										"length": 32,
										"start": 200
									},
									{
										"length": 32,
										"start": 730
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806306cd702c1461004657806308a130ab14610076578063fc57d4df14610094575b600080fd5b610060600480360381019061005b91906105f3565b6100c4565b60405161006d9190610642565b60405180910390f35b61007e6102d8565b60405161008b919061066c565b60405180910390f35b6100ae60048036038101906100a99190610687565b6102fc565b6040516100bb9190610642565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610129576101228361030e565b90506102d2565b60008373ffffffffffffffffffffffffffffffffffffffff1663d3c9cc26846040518263ffffffff1660e01b81526004016101649190610642565b600060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101aa9190610822565b905060008473ffffffffffffffffffffffffffffffffffffffff166359f7cf50856040518263ffffffff1660e01b81526004016101e79190610642565b600060405180830381865afa158015610204573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061022d9190610943565b90506000808351905060005b818110156102c95760006102668683815181106102595761025861098c565b5b602002602001015161030e565b9050600081146102b5576102a78583815181106102865761028561098c565b5b6020026020010151670de0b6b3a7640000836104709092919063ffffffff16565b846102b291906109ea565b93505b5080806102c190610a1e565b915050610239565b50819450505050505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103078261030e565b9050919050565b600080610348905060007347fb2585d2c56fe188d0e6ec628a38b74fceeedf73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610a9f565b905060007347fb2585d2c56fe188d0e6ec628a38b74fceeedf73ffffffffffffffffffffffffffffffffffffffff1663bcfd032d86856040518363ffffffff1660e01b81526004016103ee929190610acc565b60a060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190610b6d565b5050509150508160ff16600a6104459190610d1b565b6a52b7d2dcc80cd2e40000008261045c9190610d66565b6104669190610e0d565b9350505050919050565b60008060008019858709858702925082811083820303915050600081036104ab578382816104a1576104a0610dde565b5b0492505050610544565b8084116104b757600080fd5b60008486880990508281118203915080830392506000600186190186169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058a8261055f565b9050919050565b61059a8161057f565b81146105a557600080fd5b50565b6000813590506105b781610591565b92915050565b6000819050919050565b6105d0816105bd565b81146105db57600080fd5b50565b6000813590506105ed816105c7565b92915050565b6000806040838503121561060a57610609610555565b5b6000610618858286016105a8565b9250506020610629858286016105de565b9150509250929050565b61063c816105bd565b82525050565b60006020820190506106576000830184610633565b92915050565b6106668161057f565b82525050565b6000602082019050610681600083018461065d565b92915050565b60006020828403121561069d5761069c610555565b5b60006106ab848285016105a8565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610702826106b9565b810181811067ffffffffffffffff82111715610721576107206106ca565b5b80604052505050565b600061073461054b565b905061074082826106f9565b919050565b600067ffffffffffffffff8211156107605761075f6106ca565b5b602082029050602081019050919050565b600080fd5b60008151905061078581610591565b92915050565b600061079e61079984610745565b61072a565b905080838252602082019050602084028301858111156107c1576107c0610771565b5b835b818110156107ea57806107d68882610776565b8452602084019350506020810190506107c3565b5050509392505050565b600082601f830112610809576108086106b4565b5b815161081984826020860161078b565b91505092915050565b60006020828403121561083857610837610555565b5b600082015167ffffffffffffffff8111156108565761085561055a565b5b610862848285016107f4565b91505092915050565b600067ffffffffffffffff821115610886576108856106ca565b5b602082029050602081019050919050565b6000815190506108a6816105c7565b92915050565b60006108bf6108ba8461086b565b61072a565b905080838252602082019050602084028301858111156108e2576108e1610771565b5b835b8181101561090b57806108f78882610897565b8452602084019350506020810190506108e4565b5050509392505050565b600082601f83011261092a576109296106b4565b5b815161093a8482602086016108ac565b91505092915050565b60006020828403121561095957610958610555565b5b600082015167ffffffffffffffff8111156109775761097661055a565b5b61098384828501610915565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f5826105bd565b9150610a00836105bd565b9250828201905080821115610a1857610a176109bb565b5b92915050565b6000610a29826105bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5b57610a5a6109bb565b5b600182019050919050565b600060ff82169050919050565b610a7c81610a66565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b600060208284031215610ab557610ab4610555565b5b6000610ac384828501610a8a565b91505092915050565b6000604082019050610ae1600083018561065d565b610aee602083018461065d565b9392505050565b600069ffffffffffffffffffff82169050919050565b610b1481610af5565b8114610b1f57600080fd5b50565b600081519050610b3181610b0b565b92915050565b6000819050919050565b610b4a81610b37565b8114610b5557600080fd5b50565b600081519050610b6781610b41565b92915050565b600080600080600060a08688031215610b8957610b88610555565b5b6000610b9788828901610b22565b9550506020610ba888828901610b58565b9450506040610bb988828901610897565b9350506060610bca88828901610897565b9250506080610bdb88828901610b22565b9150509295509295909350565b60008160011c9050919050565b6000808291508390505b6001851115610c3f57808604811115610c1b57610c1a6109bb565b5b6001851615610c2a5780820291505b8081029050610c3885610be8565b9450610bff565b94509492505050565b600082610c585760019050610d14565b81610c665760009050610d14565b8160018114610c7c5760028114610c8657610cb5565b6001915050610d14565b60ff841115610c9857610c976109bb565b5b8360020a915084821115610caf57610cae6109bb565b5b50610d14565b5060208310610133831016604e8410600b8410161715610cea5782820a905083811115610ce557610ce46109bb565b5b610d14565b610cf78484846001610bf5565b92509050818404811115610d0e57610d0d6109bb565b5b81810290505b9392505050565b6000610d26826105bd565b9150610d31836105bd565b9250610d5e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c48565b905092915050565b6000610d7182610b37565b9150610d7c83610b37565b9250828202610d8a81610b37565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc257610dc16109bb565b5b8282058414831517610dd757610dd66109bb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e18826105bd565b9150610e23836105bd565b925082610e3357610e32610dde565b5b82820490509291505056fea26469706673582212207eb91055f6c1b4fb4c5f4d457449547c36d7f0a8728be5549d44d971d3df6e2d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CD702C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8A130AB EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFC57D4DF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129 JUMPI PUSH2 0x122 DUP4 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3C9CC26 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x59F7CF50 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 PUSH2 0x266 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x30E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2B5 JUMPI PUSH2 0x2A7 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x470 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST SWAP4 POP JUMPDEST POP DUP1 DUP1 PUSH2 0x2C1 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x239 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307 DUP3 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x348 SWAP1 POP PUSH1 0x0 PUSH20 0x47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBCFD032D DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP3 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP2 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x4AB JUMPI DUP4 DUP3 DUP2 PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x544 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x57F JUMP JUMPDEST DUP2 EQ PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B7 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x5BD JUMP JUMPDEST DUP2 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5ED DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP6 DUP3 DUP7 ADD PUSH2 0x5A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x629 DUP6 DUP3 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x63C DUP2 PUSH2 0x5BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x57F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x65D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP5 DUP3 DUP6 ADD PUSH2 0x5A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x702 DUP3 PUSH2 0x6B9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x721 JUMPI PUSH2 0x720 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH2 0x740 DUP3 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x6CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x785 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH2 0x799 DUP5 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0x771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI DUP1 PUSH2 0x7D6 DUP9 DUP3 PUSH2 0x776 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x819 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x78B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x55A JUMP JUMPDEST JUMPDEST PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x7F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A6 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH2 0x8BA DUP5 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90B JUMPI DUP1 PUSH2 0x8F7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x93A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x977 JUMPI PUSH2 0x976 PUSH2 0x55A JUMP JUMPDEST JUMPDEST PUSH2 0x983 DUP5 DUP3 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9F5 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA17 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x65D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xAF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB31 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4A DUP2 PUSH2 0xB37 JUMP JUMPDEST DUP2 EQ PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB67 DUP2 PUSH2 0xB41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB88 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB97 DUP9 DUP3 DUP10 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBA8 DUP9 DUP3 DUP10 ADD PUSH2 0xB58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBB9 DUP9 DUP3 DUP10 ADD PUSH2 0x897 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xBCA DUP9 DUP3 DUP10 ADD PUSH2 0x897 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xBDB DUP9 DUP3 DUP10 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xC3F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xC2A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xC38 DUP6 PUSH2 0xBE8 JUMP JUMPDEST SWAP5 POP PUSH2 0xBFF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC58 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD14 JUMP JUMPDEST DUP2 PUSH2 0xC66 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD14 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC86 JUMPI PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD14 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0x9BB JUMP JUMPDEST JUMPDEST POP PUSH2 0xD14 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xCEA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH2 0xCF7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xBF5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xD31 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP PUSH2 0xD5E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD8A DUP2 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDD7 JUMPI PUSH2 0xDD6 PUSH2 0x9BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE18 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP2 POP PUSH2 0xE23 DUP4 PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE33 JUMPI PUSH2 0xE32 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB91055F6C1B4FB4C5F4D457449547C36D7F0A8728BE5549D44D971D3DF6E2D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "936:2708:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:1122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1245:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2483:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1355:1122;1450:7;1565;1554:18;;:7;:18;;;1550:59;;1581:28;1601:7;1581:19;:28::i;:::-;1574:35;;;;1550:59;1620:23;1655:7;1646:27;;;1674:5;1646:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1620:60;;1690:24;1726:7;1717:28;;;1746:5;1717:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1690:62;;1826:21;1878:14;1895:6;:13;1878:30;;1924:9;1919:522;1943:6;1939:1;:10;1919:522;;;2245:23;2271:30;2291:6;2298:1;2291:9;;;;;;;;:::i;:::-;;;;;;;;2271:19;:30::i;:::-;2245:56;;2338:1;2319:15;:20;2315:116;;2376:40;2399:7;2407:1;2399:10;;;;;;;;:::i;:::-;;;;;;;;2411:4;2376:15;:22;;:40;;;;;:::i;:::-;2359:57;;;;;:::i;:::-;;;2315:116;1956:485;1951:3;;;;;:::i;:::-;;;;1919:522;;;;2457:13;2450:20;;;;;;1355:1122;;;;;:::o;1245:32::-;;;:::o;2483:165::-;2579:7;2609:32;2629:11;2609:19;:32::i;:::-;2602:39;;2483:165;;;:::o;2793:849::-;2889:7;3044:13;350:3:2;3044:33:1;;3311:14;1164:42;3328:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3311:40;;3364:22;1164:42;3396:28;;;3438:10;3462:5;3396:81;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3361:116;;;;;;3625:8;3617:17;;3613:2;:21;;;;:::i;:::-;3603:4;3583:15;3582:26;;;;:::i;:::-;3574:61;;;;:::i;:::-;3488:147;;;;;2793:849;;;:::o;1668:3925:0:-;1780:14;2127:13;2199;2324:1;2320:6;2317:1;2314;2307:20;2360:1;2357;2353:9;2344:18;;2415:5;2411:2;2408:13;2400:5;2396:2;2392:14;2388:34;2379:43;;2279:157;2526:1;2517:5;:10;2513:75;;2562:11;2554:5;:19;;;;;:::i;:::-;;;2547:26;;;;;;2513:75;2712:5;2698:11;:19;2690:28;;;;;;2974:17;3109:11;3106:1;3103;3096:25;3083:38;;3237:5;3226:9;3223:20;3216:5;3212:32;3203:41;;3281:9;3274:5;3270:21;3261:30;;3612:12;3657:1;3643:11;3642:12;:16;3627:11;:32;3612:47;;3779:4;3766:11;3762:22;3747:37;;3871:4;3864:5;3860:16;3851:25;;4028:1;4021:4;4014;4011:1;4007:12;4003:23;3999:31;3991:39;;4127:4;4119:5;:12;4110:21;;;;4449:15;4487:1;4472:11;4468:1;:15;4467:21;4449:39;;4734:7;4720:11;:21;4716:1;:25;4705:36;;;;4803:7;4789:11;:21;4785:1;:25;4774:36;;;;4873:7;4859:11;:21;4855:1;:25;4844:36;;;;4943:7;4929:11;:21;4925:1;:25;4914:36;;;;5013:7;4999:11;:21;4995:1;:25;4984:36;;;;5084:7;5070:11;:21;5066:1;:25;5055:36;;;;5542:7;5534:5;:15;5525:24;;5563:13;;;;;1668:3925;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:118::-;2116:24;2134:5;2116:24;:::i;:::-;2111:3;2104:37;2029:118;;:::o;2153:222::-;2246:4;2284:2;2273:9;2269:18;2261:26;;2297:71;2365:1;2354:9;2350:17;2341:6;2297:71;:::i;:::-;2153:222;;;;:::o;2381:329::-;2440:6;2489:2;2477:9;2468:7;2464:23;2460:32;2457:119;;;2495:79;;:::i;:::-;2457:119;2615:1;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2586:117;2381:329;;;;:::o;2716:117::-;2825:1;2822;2815:12;2839:102;2880:6;2931:2;2927:7;2922:2;2915:5;2911:14;2907:28;2897:38;;2839:102;;;:::o;2947:180::-;2995:77;2992:1;2985:88;3092:4;3089:1;3082:15;3116:4;3113:1;3106:15;3133:281;3216:27;3238:4;3216:27;:::i;:::-;3208:6;3204:40;3346:6;3334:10;3331:22;3310:18;3298:10;3295:34;3292:62;3289:88;;;3357:18;;:::i;:::-;3289:88;3397:10;3393:2;3386:22;3176:238;3133:281;;:::o;3420:129::-;3454:6;3481:20;;:::i;:::-;3471:30;;3510:33;3538:4;3530:6;3510:33;:::i;:::-;3420:129;;;:::o;3555:311::-;3632:4;3722:18;3714:6;3711:30;3708:56;;;3744:18;;:::i;:::-;3708:56;3794:4;3786:6;3782:17;3774:25;;3854:4;3848;3844:15;3836:23;;3555:311;;;:::o;3872:117::-;3981:1;3978;3971:12;3995:143;4052:5;4083:6;4077:13;4068:22;;4099:33;4126:5;4099:33;:::i;:::-;3995:143;;;;:::o;4161:732::-;4268:5;4293:81;4309:64;4366:6;4309:64;:::i;:::-;4293:81;:::i;:::-;4284:90;;4394:5;4423:6;4416:5;4409:21;4457:4;4450:5;4446:16;4439:23;;4510:4;4502:6;4498:17;4490:6;4486:30;4539:3;4531:6;4528:15;4525:122;;;4558:79;;:::i;:::-;4525:122;4673:6;4656:231;4690:6;4685:3;4682:15;4656:231;;;4765:3;4794:48;4838:3;4826:10;4794:48;:::i;:::-;4789:3;4782:61;4872:4;4867:3;4863:14;4856:21;;4732:155;4716:4;4711:3;4707:14;4700:21;;4656:231;;;4660:21;4274:619;;4161:732;;;;;:::o;4916:385::-;4998:5;5047:3;5040:4;5032:6;5028:17;5024:27;5014:122;;5055:79;;:::i;:::-;5014:122;5165:6;5159:13;5190:105;5291:3;5283:6;5276:4;5268:6;5264:17;5190:105;:::i;:::-;5181:114;;5004:297;4916:385;;;;:::o;5307:554::-;5402:6;5451:2;5439:9;5430:7;5426:23;5422:32;5419:119;;;5457:79;;:::i;:::-;5419:119;5598:1;5587:9;5583:17;5577:24;5628:18;5620:6;5617:30;5614:117;;;5650:79;;:::i;:::-;5614:117;5755:89;5836:7;5827:6;5816:9;5812:22;5755:89;:::i;:::-;5745:99;;5548:306;5307:554;;;;:::o;5867:311::-;5944:4;6034:18;6026:6;6023:30;6020:56;;;6056:18;;:::i;:::-;6020:56;6106:4;6098:6;6094:17;6086:25;;6166:4;6160;6156:15;6148:23;;5867:311;;;:::o;6184:143::-;6241:5;6272:6;6266:13;6257:22;;6288:33;6315:5;6288:33;:::i;:::-;6184:143;;;;:::o;6350:732::-;6457:5;6482:81;6498:64;6555:6;6498:64;:::i;:::-;6482:81;:::i;:::-;6473:90;;6583:5;6612:6;6605:5;6598:21;6646:4;6639:5;6635:16;6628:23;;6699:4;6691:6;6687:17;6679:6;6675:30;6728:3;6720:6;6717:15;6714:122;;;6747:79;;:::i;:::-;6714:122;6862:6;6845:231;6879:6;6874:3;6871:15;6845:231;;;6954:3;6983:48;7027:3;7015:10;6983:48;:::i;:::-;6978:3;6971:61;7061:4;7056:3;7052:14;7045:21;;6921:155;6905:4;6900:3;6896:14;6889:21;;6845:231;;;6849:21;6463:619;;6350:732;;;;;:::o;7105:385::-;7187:5;7236:3;7229:4;7221:6;7217:17;7213:27;7203:122;;7244:79;;:::i;:::-;7203:122;7354:6;7348:13;7379:105;7480:3;7472:6;7465:4;7457:6;7453:17;7379:105;:::i;:::-;7370:114;;7193:297;7105:385;;;;:::o;7496:554::-;7591:6;7640:2;7628:9;7619:7;7615:23;7611:32;7608:119;;;7646:79;;:::i;:::-;7608:119;7787:1;7776:9;7772:17;7766:24;7817:18;7809:6;7806:30;7803:117;;;7839:79;;:::i;:::-;7803:117;7944:89;8025:7;8016:6;8005:9;8001:22;7944:89;:::i;:::-;7934:99;;7737:306;7496:554;;;;:::o;8056:180::-;8104:77;8101:1;8094:88;8201:4;8198:1;8191:15;8225:4;8222:1;8215:15;8242:180;8290:77;8287:1;8280:88;8387:4;8384:1;8377:15;8411:4;8408:1;8401:15;8428:191;8468:3;8487:20;8505:1;8487:20;:::i;:::-;8482:25;;8521:20;8539:1;8521:20;:::i;:::-;8516:25;;8564:1;8561;8557:9;8550:16;;8585:3;8582:1;8579:10;8576:36;;;8592:18;;:::i;:::-;8576:36;8428:191;;;;:::o;8625:233::-;8664:3;8687:24;8705:5;8687:24;:::i;:::-;8678:33;;8733:66;8726:5;8723:77;8720:103;;8803:18;;:::i;:::-;8720:103;8850:1;8843:5;8839:13;8832:20;;8625:233;;;:::o;8864:86::-;8899:7;8939:4;8932:5;8928:16;8917:27;;8864:86;;;:::o;8956:118::-;9027:22;9043:5;9027:22;:::i;:::-;9020:5;9017:33;9007:61;;9064:1;9061;9054:12;9007:61;8956:118;:::o;9080:139::-;9135:5;9166:6;9160:13;9151:22;;9182:31;9207:5;9182:31;:::i;:::-;9080:139;;;;:::o;9225:347::-;9293:6;9342:2;9330:9;9321:7;9317:23;9313:32;9310:119;;;9348:79;;:::i;:::-;9310:119;9468:1;9493:62;9547:7;9538:6;9527:9;9523:22;9493:62;:::i;:::-;9483:72;;9439:126;9225:347;;;;:::o;9578:332::-;9699:4;9737:2;9726:9;9722:18;9714:26;;9750:71;9818:1;9807:9;9803:17;9794:6;9750:71;:::i;:::-;9831:72;9899:2;9888:9;9884:18;9875:6;9831:72;:::i;:::-;9578:332;;;;;:::o;9916:105::-;9952:7;9992:22;9985:5;9981:34;9970:45;;9916:105;;;:::o;10027:120::-;10099:23;10116:5;10099:23;:::i;:::-;10092:5;10089:34;10079:62;;10137:1;10134;10127:12;10079:62;10027:120;:::o;10153:141::-;10209:5;10240:6;10234:13;10225:22;;10256:32;10282:5;10256:32;:::i;:::-;10153:141;;;;:::o;10300:76::-;10336:7;10365:5;10354:16;;10300:76;;;:::o;10382:120::-;10454:23;10471:5;10454:23;:::i;:::-;10447:5;10444:34;10434:62;;10492:1;10489;10482:12;10434:62;10382:120;:::o;10508:141::-;10564:5;10595:6;10589:13;10580:22;;10611:32;10637:5;10611:32;:::i;:::-;10508:141;;;;:::o;10655:971::-;10758:6;10766;10774;10782;10790;10839:3;10827:9;10818:7;10814:23;10810:33;10807:120;;;10846:79;;:::i;:::-;10807:120;10966:1;10991:63;11046:7;11037:6;11026:9;11022:22;10991:63;:::i;:::-;10981:73;;10937:127;11103:2;11129:63;11184:7;11175:6;11164:9;11160:22;11129:63;:::i;:::-;11119:73;;11074:128;11241:2;11267:64;11323:7;11314:6;11303:9;11299:22;11267:64;:::i;:::-;11257:74;;11212:129;11380:2;11406:64;11462:7;11453:6;11442:9;11438:22;11406:64;:::i;:::-;11396:74;;11351:129;11519:3;11546:63;11601:7;11592:6;11581:9;11577:22;11546:63;:::i;:::-;11536:73;;11490:129;10655:971;;;;;;;;:::o;11632:102::-;11674:8;11721:5;11718:1;11714:13;11693:34;;11632:102;;;:::o;11740:848::-;11801:5;11808:4;11832:6;11823:15;;11856:5;11847:14;;11870:712;11891:1;11881:8;11878:15;11870:712;;;11986:4;11981:3;11977:14;11971:4;11968:24;11965:50;;;11995:18;;:::i;:::-;11965:50;12045:1;12035:8;12031:16;12028:451;;;12460:4;12453:5;12449:16;12440:25;;12028:451;12510:4;12504;12500:15;12492:23;;12540:32;12563:8;12540:32;:::i;:::-;12528:44;;11870:712;;;11740:848;;;;;;;:::o;12594:1073::-;12648:5;12839:8;12829:40;;12860:1;12851:10;;12862:5;;12829:40;12888:4;12878:36;;12905:1;12896:10;;12907:5;;12878:36;12974:4;13022:1;13017:27;;;;13058:1;13053:191;;;;12967:277;;13017:27;13035:1;13026:10;;13037:5;;;13053:191;13098:3;13088:8;13085:17;13082:43;;;13105:18;;:::i;:::-;13082:43;13154:8;13151:1;13147:16;13138:25;;13189:3;13182:5;13179:14;13176:40;;;13196:18;;:::i;:::-;13176:40;13229:5;;;12967:277;;13353:2;13343:8;13340:16;13334:3;13328:4;13325:13;13321:36;13303:2;13293:8;13290:16;13285:2;13279:4;13276:12;13272:35;13256:111;13253:246;;;13409:8;13403:4;13399:19;13390:28;;13444:3;13437:5;13434:14;13431:40;;;13451:18;;:::i;:::-;13431:40;13484:5;;13253:246;13524:42;13562:3;13552:8;13546:4;13543:1;13524:42;:::i;:::-;13509:57;;;;13598:4;13593:3;13589:14;13582:5;13579:25;13576:51;;;13607:18;;:::i;:::-;13576:51;13656:4;13649:5;13645:16;13636:25;;12594:1073;;;;;;:::o;13673:285::-;13733:5;13757:23;13775:4;13757:23;:::i;:::-;13749:31;;13801:27;13819:8;13801:27;:::i;:::-;13789:39;;13847:104;13884:66;13874:8;13868:4;13847:104;:::i;:::-;13838:113;;13673:285;;;;:::o;13964:556::-;14003:7;14026:19;14043:1;14026:19;:::i;:::-;14021:24;;14059:19;14076:1;14059:19;:::i;:::-;14054:24;;14113:1;14110;14106:9;14135:29;14152:11;14135:29;:::i;:::-;14124:40;;14222:66;14219:1;14216:73;14212:1;14209;14205:9;14201:89;14198:115;;;14293:18;;:::i;:::-;14198:115;14463:1;14454:7;14449:16;14446:1;14443:23;14423:1;14416:9;14396:84;14373:140;;14493:18;;:::i;:::-;14373:140;14011:509;13964:556;;;;:::o;14526:180::-;14574:77;14571:1;14564:88;14671:4;14668:1;14661:15;14695:4;14692:1;14685:15;14712:185;14752:1;14769:20;14787:1;14769:20;:::i;:::-;14764:25;;14803:20;14821:1;14803:20;:::i;:::-;14798:25;;14842:1;14832:35;;14847:18;;:::i;:::-;14832:35;14889:1;14886;14882:9;14877:14;;14712:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "740000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Wrapper()": "infinite",
								"getBundlePrice(address,uint256)": "infinite",
								"getUnderlyingPrice(address)": "infinite"
							},
							"internal": {
								"_getUnderlyingPrice(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1284,
									"end": 1349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1342,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "565"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 936,
									"end": 3644,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207eb91055f6c1b4fb4c5f4d457449547c36d7f0a8728be5549d44d971d3df6e2d64736f6c63430008110033",
									".code": [
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "6CD702C"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "8A130AB"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "FC57D4DF"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 3644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1355,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1355,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1355,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1245,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1245,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2483,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2483,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2483,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1550,
											"end": 1609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1581,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1609,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1581,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1574,
											"end": 1609,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1609,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1550,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1646,
											"end": 1673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "D3C9CC26"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1646,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1646,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "59F7CF50"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1717,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1717,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2291,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2271,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2339,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2399,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2376,
											"end": 2391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2359,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1951,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 2477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1245,
											"end": 1277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2629,
											"end": 2640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2609,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3642,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2793,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 3044,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF"
										},
										{
											"begin": 3328,
											"end": 3349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3349,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3328,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "47FB2585D2C56FE188D0E6EC628A38B74FCEEEDF"
										},
										{
											"begin": 3396,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "BCFD032D"
										},
										{
											"begin": 3438,
											"end": 3448,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3396,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3396,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3396,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3617,
											"end": 3634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3615,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3613,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 3583,
											"end": 3598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3582,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3574,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3574,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3635,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2513,
											"end": 2588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2554,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2588,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2513,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2690,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3120,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 3244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3638,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3777,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3784,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3876,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4119,
											"end": 4124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4119,
											"end": 4131,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4131,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4131,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4468,
											"end": 4483,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4488,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4731,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4741,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4716,
											"end": 4741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4741,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4800,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4785,
											"end": 4810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 4870,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 4880,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4855,
											"end": 4880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4943,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4940,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4950,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4925,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4950,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5010,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5081,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5091,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5066,
											"end": 5091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5091,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5539,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2116,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2297,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2492,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2495,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2640,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2827,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2941,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2839,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 3127,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2947,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3072,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2992,
											"end": 2993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3133,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3216,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3204,
											"end": 3244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3329,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3354,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3289,
											"end": 3377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3357,
											"end": 3375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3377,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3289,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3549,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3420,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3481,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3481,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3501,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3481,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3510,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3543,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3510,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3866,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3555,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3708,
											"end": 3764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3744,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3764,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3708,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3799,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3866,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3989,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3872,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 3983,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4052,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4126,
											"end": 4131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4099,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4132,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4099,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4309,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4309,
											"end": 4373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4373,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4309,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4293,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4374,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4293,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4374,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4374,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4421,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4430,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4515,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4542,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4647,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4525,
											"end": 4647,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4558,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4647,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4525,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4826,
											"end": 4836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4794,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4842,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4794,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4792,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4870,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4877,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4656,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5055,
											"end": 5134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5055,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5014,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5172,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5291,
											"end": 5294,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5190,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5295,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5190,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5426,
											"end": 5449,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5454,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5457,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5647,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5731,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5614,
											"end": 5731,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5731,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5614,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5755,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5844,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5755,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 6178,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5867,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6020,
											"end": 6076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6056,
											"end": 6074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6076,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6020,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6111,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6086,
											"end": 6111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6086,
											"end": 6111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6170,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6160,
											"end": 6164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 6178,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 6178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 6178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5867,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6315,
											"end": 6320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6288,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6321,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6288,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6498,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6555,
											"end": 6561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6498,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6498,
											"end": 6562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6498,
											"end": 6562,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6498,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6482,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6482,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6482,
											"end": 6563,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6482,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6588,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6639,
											"end": 6644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6635,
											"end": 6651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6704,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6675,
											"end": 6705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6731,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6720,
											"end": 6726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6732,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6714,
											"end": 6836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6747,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 6747,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6826,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6747,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6836,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6714,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6871,
											"end": 6886,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7015,
											"end": 7025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6983,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7031,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6983,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6978,
											"end": 6981,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6971,
											"end": 7032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7052,
											"end": 7066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7066,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6921,
											"end": 7076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6900,
											"end": 6903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6889,
											"end": 6910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6889,
											"end": 6910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6845,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 7082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 7082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 7082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7229,
											"end": 7233,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7213,
											"end": 7240,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7203,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7203,
											"end": 7325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7244,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7244,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7323,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7244,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7203,
											"end": 7325,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7203,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7379,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7484,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7379,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7370,
											"end": 7484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7370,
											"end": 7484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7193,
											"end": 7490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7611,
											"end": 7643,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7646,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7776,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7789,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7766,
											"end": 7790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7809,
											"end": 7815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7806,
											"end": 7836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7803,
											"end": 7920,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7803,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7803,
											"end": 7920,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7839,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7839,
											"end": 7918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7918,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7839,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7803,
											"end": 7920,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7803,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8025,
											"end": 8032,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8005,
											"end": 8014,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7944,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 8033,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7944,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 8033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 8033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7737,
											"end": 8043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 8050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8236,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 8056,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8181,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8101,
											"end": 8102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8205,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8225,
											"end": 8229,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8222,
											"end": 8223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8230,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8242,
											"end": 8422,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8242,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8367,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8387,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8377,
											"end": 8392,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8408,
											"end": 8409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8416,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8505,
											"end": 8506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8487,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 8487,
											"end": 8507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8487,
											"end": 8507,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8487,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8482,
											"end": 8507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8482,
											"end": 8507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 8521,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8564,
											"end": 8565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8550,
											"end": 8566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8550,
											"end": 8566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8585,
											"end": 8588,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8579,
											"end": 8589,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8592,
											"end": 8610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8576,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8858,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 8625,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8687,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8705,
											"end": 8710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 8687,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8711,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8687,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8678,
											"end": 8711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8678,
											"end": 8711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8726,
											"end": 8731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8723,
											"end": 8800,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8720,
											"end": 8823,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8803,
											"end": 8821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8823,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8720,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8843,
											"end": 8848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8950,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8864,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 8932,
											"end": 8937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8944,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9074,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8956,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9043,
											"end": 9048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 9027,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9049,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9027,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9017,
											"end": 9050,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9007,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9007,
											"end": 9068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9054,
											"end": 9066,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9007,
											"end": 9068,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9007,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9151,
											"end": 9173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9151,
											"end": 9173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9182,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9207,
											"end": 9212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9182,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 9182,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9182,
											"end": 9213,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9182,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9330,
											"end": 9339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9321,
											"end": 9328,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9317,
											"end": 9340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9313,
											"end": 9345,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9429,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9310,
											"end": 9429,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 9348,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 9348,
											"end": 9427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9427,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 9348,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9429,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9310,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9547,
											"end": 9554,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9523,
											"end": 9545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 9493,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9555,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9493,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9699,
											"end": 9703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 9735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9714,
											"end": 9740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9714,
											"end": 9740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9816,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9800,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 9750,
											"end": 9821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9899,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 9831,
											"end": 9903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9903,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9831,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 10021,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9916,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 9959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9985,
											"end": 9990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 10015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9970,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9970,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 10021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 10021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 10021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 10021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10147,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10027,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10116,
											"end": 10121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10099,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10099,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10092,
											"end": 10097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10089,
											"end": 10123,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10079,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10079,
											"end": 10141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10079,
											"end": 10141,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10079,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10282,
											"end": 10287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10256,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10288,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10256,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10336,
											"end": 10343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10365,
											"end": 10370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10354,
											"end": 10370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10354,
											"end": 10370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10502,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 10382,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10454,
											"end": 10477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 10452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10444,
											"end": 10478,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10434,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10434,
											"end": 10496,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10489,
											"end": 10490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10434,
											"end": 10496,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10434,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10564,
											"end": 10569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10589,
											"end": 10602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10611,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 10637,
											"end": 10642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10611,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 10611,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10611,
											"end": 10643,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 10611,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10774,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10790,
											"end": 10796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10827,
											"end": 10836,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10810,
											"end": 10843,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10807,
											"end": 10927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10807,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 10807,
											"end": 10927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 10846,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 10846,
											"end": 10925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 10925,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 10846,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10807,
											"end": 10927,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 10807,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 11046,
											"end": 11053,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11037,
											"end": 11043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11035,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 10991,
											"end": 11054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11054,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10991,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10981,
											"end": 11054,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10981,
											"end": 11054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10937,
											"end": 11064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11105,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11129,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 11184,
											"end": 11191,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11175,
											"end": 11181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11164,
											"end": 11173,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11160,
											"end": 11182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 11129,
											"end": 11192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11192,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 11129,
											"end": 11192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11192,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11241,
											"end": 11243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11267,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11314,
											"end": 11320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11303,
											"end": 11312,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11299,
											"end": 11321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11267,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 11267,
											"end": 11331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11267,
											"end": 11331,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11267,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11257,
											"end": 11331,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11257,
											"end": 11331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11380,
											"end": 11382,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11406,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 11462,
											"end": 11469,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11438,
											"end": 11460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11406,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 11406,
											"end": 11470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11406,
											"end": 11470,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 11406,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11470,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11546,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11601,
											"end": 11608,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11592,
											"end": 11598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 11546,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 11609,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11546,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11490,
											"end": 11619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 11626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11632,
											"end": 11734,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 11632,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11674,
											"end": 11682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11718,
											"end": 11719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11714,
											"end": 11727,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11632,
											"end": 11734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11632,
											"end": 11734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11632,
											"end": 11734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11632,
											"end": 11734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11801,
											"end": 11806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11823,
											"end": 11838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11823,
											"end": 11838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11856,
											"end": 11861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11847,
											"end": 11861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11847,
											"end": 11861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11881,
											"end": 11889,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11878,
											"end": 11893,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11981,
											"end": 11984,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11977,
											"end": 11991,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 11975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11968,
											"end": 11992,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11965,
											"end": 12015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11965,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 11965,
											"end": 12015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 11995,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11965,
											"end": 12015,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 11965,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12046,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12035,
											"end": 12043,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12031,
											"end": 12047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12028,
											"end": 12479,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12028,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 12028,
											"end": 12479,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12453,
											"end": 12458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12449,
											"end": 12465,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12440,
											"end": 12465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12440,
											"end": 12465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12028,
											"end": 12479,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 12028,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12504,
											"end": 12508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12500,
											"end": 12515,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12492,
											"end": 12515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12492,
											"end": 12515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 12563,
											"end": 12571,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 12540,
											"end": 12572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12572,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 12540,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12528,
											"end": 12572,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12528,
											"end": 12572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 11870,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 12588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12648,
											"end": 12653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12839,
											"end": 12847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12829,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 12829,
											"end": 12869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12860,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12851,
											"end": 12861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12851,
											"end": 12861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12862,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 12862,
											"end": 12867,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12829,
											"end": 12869,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 12829,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12878,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 12878,
											"end": 12914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12905,
											"end": 12906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12896,
											"end": 12906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12896,
											"end": 12906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12878,
											"end": 12914,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 12878,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12974,
											"end": 12978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13058,
											"end": 13059,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12967,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 12967,
											"end": 13244,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 13017,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13026,
											"end": 13036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13037,
											"end": 13042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13037,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 13037,
											"end": 13042,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 13053,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13098,
											"end": 13101,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13088,
											"end": 13096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13085,
											"end": 13102,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13082,
											"end": 13125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13082,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 13082,
											"end": 13125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13105,
											"end": 13123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 13105,
											"end": 13123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 13105,
											"end": 13123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13105,
											"end": 13123,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 13105,
											"end": 13123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13082,
											"end": 13125,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 13082,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13154,
											"end": 13162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13151,
											"end": 13152,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 13147,
											"end": 13163,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 13138,
											"end": 13163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13138,
											"end": 13163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13189,
											"end": 13192,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13182,
											"end": 13187,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13179,
											"end": 13193,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13176,
											"end": 13216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13176,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 13176,
											"end": 13216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 13196,
											"end": 13214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13176,
											"end": 13216,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 13176,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13229,
											"end": 13234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13229,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 13229,
											"end": 13234,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12967,
											"end": 13244,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 12967,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12967,
											"end": 13244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13353,
											"end": 13355,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13343,
											"end": 13351,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13340,
											"end": 13356,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13334,
											"end": 13337,
											"name": "PUSH",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 13328,
											"end": 13332,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13325,
											"end": 13338,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13321,
											"end": 13357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13303,
											"end": 13305,
											"name": "PUSH",
											"source": 4,
											"value": "4E"
										},
										{
											"begin": 13293,
											"end": 13301,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13290,
											"end": 13306,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13285,
											"end": 13287,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13276,
											"end": 13288,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13272,
											"end": 13307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13256,
											"end": 13367,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13253,
											"end": 13499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13253,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 13253,
											"end": 13499,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13403,
											"end": 13407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13399,
											"end": 13418,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 13390,
											"end": 13418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13390,
											"end": 13418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13444,
											"end": 13447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13437,
											"end": 13442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13434,
											"end": 13448,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13431,
											"end": 13471,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13431,
											"end": 13471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 13431,
											"end": 13471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13451,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13451,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 13451,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13451,
											"end": 13469,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13451,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13431,
											"end": 13471,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 13431,
											"end": 13471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13484,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 13484,
											"end": 13489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13253,
											"end": 13499,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 13253,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13524,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 13562,
											"end": 13565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13552,
											"end": 13560,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13546,
											"end": 13550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13543,
											"end": 13544,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13524,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 13524,
											"end": 13566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13524,
											"end": 13566,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 13524,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13509,
											"end": 13566,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13509,
											"end": 13566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13509,
											"end": 13566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13509,
											"end": 13566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13598,
											"end": 13602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13593,
											"end": 13596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13589,
											"end": 13603,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 13582,
											"end": 13587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13579,
											"end": 13604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13576,
											"end": 13627,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13576,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 13576,
											"end": 13627,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13607,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 13607,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 13607,
											"end": 13625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13607,
											"end": 13625,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 13607,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13576,
											"end": 13627,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 13576,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13656,
											"end": 13660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13649,
											"end": 13654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13645,
											"end": 13661,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13636,
											"end": 13661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13636,
											"end": 13661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 13667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13733,
											"end": 13738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 13775,
											"end": 13779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 13757,
											"end": 13780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13749,
											"end": 13780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13749,
											"end": 13780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 13819,
											"end": 13827,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 13801,
											"end": 13828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13828,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 13801,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13789,
											"end": 13828,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13789,
											"end": 13828,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13847,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 13884,
											"end": 13950,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13874,
											"end": 13882,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13868,
											"end": 13872,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13847,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13847,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13847,
											"end": 13951,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 13847,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13838,
											"end": 13951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13838,
											"end": 13951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13673,
											"end": 13958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14003,
											"end": 14010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14026,
											"end": 14045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14026,
											"end": 14045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 14026,
											"end": 14045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14026,
											"end": 14045,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14026,
											"end": 14045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14021,
											"end": 14045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14021,
											"end": 14045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 14076,
											"end": 14077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 14059,
											"end": 14078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14113,
											"end": 14114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14110,
											"end": 14111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 14135,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 14152,
											"end": 14163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14135,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 14135,
											"end": 14164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14135,
											"end": 14164,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 14135,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14222,
											"end": 14288,
											"name": "PUSH",
											"source": 4,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14219,
											"end": 14220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14216,
											"end": 14289,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14210,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14205,
											"end": 14214,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 14201,
											"end": 14290,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14198,
											"end": 14313,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14198,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 14198,
											"end": 14313,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 14293,
											"end": 14311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14198,
											"end": 14313,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 14198,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14463,
											"end": 14464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14454,
											"end": 14461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14449,
											"end": 14465,
											"name": "SDIV",
											"source": 4
										},
										{
											"begin": 14446,
											"end": 14447,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14443,
											"end": 14466,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14423,
											"end": 14424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14416,
											"end": 14425,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14396,
											"end": 14480,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 14373,
											"end": 14513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14493,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 14493,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 14493,
											"end": 14511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14493,
											"end": 14511,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 14493,
											"end": 14511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14513,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 14373,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14011,
											"end": 14520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14706,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 14526,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14574,
											"end": 14651,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14571,
											"end": 14572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14564,
											"end": 14652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14671,
											"end": 14675,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14661,
											"end": 14676,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14695,
											"end": 14699,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 14692,
											"end": 14693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14685,
											"end": 14700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14752,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 14787,
											"end": 14788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 14769,
											"end": 14789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14764,
											"end": 14789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14764,
											"end": 14789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14803,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 14821,
											"end": 14822,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14803,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 14803,
											"end": 14823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14803,
											"end": 14823,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 14803,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14798,
											"end": 14823,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14798,
											"end": 14823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14842,
											"end": 14843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14832,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 14832,
											"end": 14867,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 14847,
											"end": 14865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14832,
											"end": 14867,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 14832,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14889,
											"end": 14890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14891,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 14891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 14891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14712,
											"end": 14897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/ChainlinkOracle.sol",
								"contracts/Denominations.sol",
								"contracts/IPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Wrapper()": "08a130ab",
							"getBundlePrice(address,uint256)": "06cd702c",
							"getUnderlyingPrice(address)": "fc57d4df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getBundlePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkOracle.sol\":\"ChainlinkOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/ChainlinkOracle.sol\":{\"keccak256\":\"0x8ce5b65ee7edb00ba82bca8c373476dcbcae7a226d764020661567d632aaa668\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec3a34d0c054f07bab73eb77f8f7f6db6c2f51a227e62b9cad45262cce18107d\",\"dweb:/ipfs/QmT6rD9swZBJRLJ2UpiUsYuGb7PxKKAXJTPPdt2jj9pw7B\"]},\"contracts/Denominations.sol\":{\"keccak256\":\"0xb5ec27aedcbf4b32a9e514cd7f5d3b95093e3d04a4eb42f482377f45dc030d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd7b7f2a5563993cdd6d7e5c6e58748d3b661a588fd3abf5e53e7f1625a7b88\",\"dweb:/ipfs/QmccN3SPi23dvChdZfMgC6Hj16uK3FxDgpffvGSKR6aWJL\"]},\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xdabed1b1214f7f821fb9833d6d5eb4b92ac18eacb5db83222235eaf9fb17e24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63fb1f83980a5e691e8066322a18202d004191c536af9360d8d612a8915a1f45\",\"dweb:/ipfs/QmSZ6bwaEjRsCeYnmbkYgY6ZSW3pqmXYPE7jLv2WBqCo5W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nftId",
									"type": "uint256"
								}
							],
							"name": "getAmounts",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nftId",
									"type": "uint256"
								}
							],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmounts(uint256)": "59f7cf50",
							"getTokens(uint256)": "d3c9cc26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkOracle.sol\":\"IWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/ChainlinkOracle.sol\":{\"keccak256\":\"0x8ce5b65ee7edb00ba82bca8c373476dcbcae7a226d764020661567d632aaa668\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec3a34d0c054f07bab73eb77f8f7f6db6c2f51a227e62b9cad45262cce18107d\",\"dweb:/ipfs/QmT6rD9swZBJRLJ2UpiUsYuGb7PxKKAXJTPPdt2jj9pw7B\"]},\"contracts/Denominations.sol\":{\"keccak256\":\"0xb5ec27aedcbf4b32a9e514cd7f5d3b95093e3d04a4eb42f482377f45dc030d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd7b7f2a5563993cdd6d7e5c6e58748d3b661a588fd3abf5e53e7f1625a7b88\",\"dweb:/ipfs/QmccN3SPi23dvChdZfMgC6Hj16uK3FxDgpffvGSKR6aWJL\"]},\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xdabed1b1214f7f821fb9833d6d5eb4b92ac18eacb5db83222235eaf9fb17e24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63fb1f83980a5e691e8066322a18202d004191c536af9360d8d612a8915a1f45\",\"dweb:/ipfs/QmSZ6bwaEjRsCeYnmbkYgY6ZSW3pqmXYPE7jLv2WBqCo5W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Denominations.sol": {
				"Denominations": {
					"abi": [
						{
							"inputs": [],
							"name": "ARS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AUD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BRL",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BTC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CAD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CHF",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CNY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EUR",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GBP",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INR",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "KRW",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NGN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NZD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PHP",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RUB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SGD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ZAR",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Denominations.sol\":58:1171  library Denominations {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Denominations.sol\":58:1171  library Denominations {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x56ef4514\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa4a23595\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa4a23595\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xca9d1a72\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe774928e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf37fcc42\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfd760c49\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x56ef4514\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6b09583c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8322fff2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x976d5e77\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9db2a472\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x2792949d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2792949d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x294a2bf2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e79477f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x465bd0a3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x53f7c367\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x01b8b339\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x03d698f2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0c012834\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19342a64\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1bf6c21b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Denominations.sol\":360:402  address public constant GBP = address(826) */\n    tag_2:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":934:976  address public constant NGN = address(566) */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":743:784  address public constant ARS = address(32) */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":647:689  address public constant CAD = address(124) */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":312:354  address public constant USD = address(840) */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":164:236  address public constant BTC = 0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":408:450  address public constant EUR = address(978) */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":886:928  address public constant SGD = address(702) */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":456:498  address public constant JPY = address(392) */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":790:832  address public constant PHP = address(608) */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":504:546  address public constant KRW = address(410) */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":1126:1168  address public constant BRL = address(986) */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":86:158  address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_14:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":1030:1072  address public constant RUB = address(643) */\n    tag_15:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":982:1024  address public constant ZAR = address(710) */\n    tag_16:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":552:594  address public constant CNY = address(156) */\n    tag_17:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":838:880  address public constant NZD = address(554) */\n    tag_18:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":1078:1120  address public constant INR = address(356) */\n    tag_19:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":695:737  address public constant CHF = address(756) */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":600:641  address public constant AUD = address(36) */\n    tag_21:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Denominations.sol\":360:402  address public constant GBP = address(826) */\n    tag_26:\n        /* \"contracts/Denominations.sol\":398:401  826 */\n      0x033a\n        /* \"contracts/Denominations.sol\":360:402  address public constant GBP = address(826) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":934:976  address public constant NGN = address(566) */\n    tag_30:\n        /* \"contracts/Denominations.sol\":972:975  566 */\n      0x0236\n        /* \"contracts/Denominations.sol\":934:976  address public constant NGN = address(566) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":743:784  address public constant ARS = address(32) */\n    tag_33:\n        /* \"contracts/Denominations.sol\":781:783  32 */\n      0x20\n        /* \"contracts/Denominations.sol\":743:784  address public constant ARS = address(32) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":647:689  address public constant CAD = address(124) */\n    tag_36:\n        /* \"contracts/Denominations.sol\":685:688  124 */\n      0x7c\n        /* \"contracts/Denominations.sol\":647:689  address public constant CAD = address(124) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":312:354  address public constant USD = address(840) */\n    tag_39:\n        /* \"contracts/Denominations.sol\":350:353  840 */\n      0x0348\n        /* \"contracts/Denominations.sol\":312:354  address public constant USD = address(840) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":164:236  address public constant BTC = 0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB */\n    tag_42:\n        /* \"contracts/Denominations.sol\":194:236  0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB */\n      0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n        /* \"contracts/Denominations.sol\":164:236  address public constant BTC = 0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":408:450  address public constant EUR = address(978) */\n    tag_45:\n        /* \"contracts/Denominations.sol\":446:449  978 */\n      0x03d2\n        /* \"contracts/Denominations.sol\":408:450  address public constant EUR = address(978) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":886:928  address public constant SGD = address(702) */\n    tag_48:\n        /* \"contracts/Denominations.sol\":924:927  702 */\n      0x02be\n        /* \"contracts/Denominations.sol\":886:928  address public constant SGD = address(702) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":456:498  address public constant JPY = address(392) */\n    tag_51:\n        /* \"contracts/Denominations.sol\":494:497  392 */\n      0x0188\n        /* \"contracts/Denominations.sol\":456:498  address public constant JPY = address(392) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":790:832  address public constant PHP = address(608) */\n    tag_54:\n        /* \"contracts/Denominations.sol\":828:831  608 */\n      0x0260\n        /* \"contracts/Denominations.sol\":790:832  address public constant PHP = address(608) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":504:546  address public constant KRW = address(410) */\n    tag_57:\n        /* \"contracts/Denominations.sol\":542:545  410 */\n      0x019a\n        /* \"contracts/Denominations.sol\":504:546  address public constant KRW = address(410) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":1126:1168  address public constant BRL = address(986) */\n    tag_60:\n        /* \"contracts/Denominations.sol\":1164:1167  986 */\n      0x03da\n        /* \"contracts/Denominations.sol\":1126:1168  address public constant BRL = address(986) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":86:158  address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_63:\n        /* \"contracts/Denominations.sol\":116:158  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"contracts/Denominations.sol\":86:158  address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":1030:1072  address public constant RUB = address(643) */\n    tag_66:\n        /* \"contracts/Denominations.sol\":1068:1071  643 */\n      0x0283\n        /* \"contracts/Denominations.sol\":1030:1072  address public constant RUB = address(643) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":982:1024  address public constant ZAR = address(710) */\n    tag_69:\n        /* \"contracts/Denominations.sol\":1020:1023  710 */\n      0x02c6\n        /* \"contracts/Denominations.sol\":982:1024  address public constant ZAR = address(710) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":552:594  address public constant CNY = address(156) */\n    tag_72:\n        /* \"contracts/Denominations.sol\":590:593  156 */\n      0x9c\n        /* \"contracts/Denominations.sol\":552:594  address public constant CNY = address(156) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":838:880  address public constant NZD = address(554) */\n    tag_75:\n        /* \"contracts/Denominations.sol\":876:879  554 */\n      0x022a\n        /* \"contracts/Denominations.sol\":838:880  address public constant NZD = address(554) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":1078:1120  address public constant INR = address(356) */\n    tag_78:\n        /* \"contracts/Denominations.sol\":1116:1119  356 */\n      0x0164\n        /* \"contracts/Denominations.sol\":1078:1120  address public constant INR = address(356) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":695:737  address public constant CHF = address(756) */\n    tag_81:\n        /* \"contracts/Denominations.sol\":733:736  756 */\n      0x02f4\n        /* \"contracts/Denominations.sol\":695:737  address public constant CHF = address(756) */\n      dup2\n      jump\t// out\n        /* \"contracts/Denominations.sol\":600:641  address public constant AUD = address(36) */\n    tag_84:\n        /* \"contracts/Denominations.sol\":638:640  36 */\n      0x24\n        /* \"contracts/Denominations.sol\":600:641  address public constant AUD = address(36) */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_86:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_87:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_92\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_86\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:367   */\n    tag_88:\n        /* \"#utility.yul\":336:360   */\n      tag_94\n        /* \"#utility.yul\":354:359   */\n      dup2\n        /* \"#utility.yul\":336:360   */\n      tag_87\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":331:334   */\n      dup3\n        /* \"#utility.yul\":324:361   */\n      mstore\n        /* \"#utility.yul\":241:367   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":373:611   */\n    tag_28:\n        /* \"#utility.yul\":474:478   */\n      0x00\n        /* \"#utility.yul\":512:514   */\n      0x20\n        /* \"#utility.yul\":501:510   */\n      dup3\n        /* \"#utility.yul\":497:515   */\n      add\n        /* \"#utility.yul\":489:515   */\n      swap1\n      pop\n        /* \"#utility.yul\":525:604   */\n      tag_96\n        /* \"#utility.yul\":601:602   */\n      0x00\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":586:603   */\n      add\n        /* \"#utility.yul\":577:583   */\n      dup5\n        /* \"#utility.yul\":525:604   */\n      tag_88\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":373:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209cd5662a3e7c68b3f7e90e01bb26038d708e11048be11ee857ccdd2343e4eeee64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6104bd610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101365760003560e01c806356ef4514116100b7578063a4a235951161007b578063a4a23595146102fd578063ca9d1a721461031b578063e774928e14610339578063f37fcc4214610357578063fd760c491461037557610136565b806356ef4514146102675780636b09583c146102855780638322fff2146102a3578063976d5e77146102c15780639db2a472146102df57610136565b80632792949d116100fe5780632792949d146101d1578063294a2bf2146101ef5780632e79477f1461020d578063465bd0a31461022b57806353f7c3671461024957610136565b806301b8b3391461013b57806303d698f2146101595780630c0128341461017757806319342a64146101955780631bf6c21b146101b3575b600080fd5b610143610393565b604051610150919061046c565b60405180910390f35b610161610399565b60405161016e919061046c565b60405180910390f35b61017f61039f565b60405161018c919061046c565b60405180910390f35b61019d6103a4565b6040516101aa919061046c565b60405180910390f35b6101bb6103a9565b6040516101c8919061046c565b60405180910390f35b6101d96103af565b6040516101e6919061046c565b60405180910390f35b6101f76103c7565b604051610204919061046c565b60405180910390f35b6102156103cd565b604051610222919061046c565b60405180910390f35b6102336103d3565b604051610240919061046c565b60405180910390f35b6102516103d9565b60405161025e919061046c565b60405180910390f35b61026f6103df565b60405161027c919061046c565b60405180910390f35b61028d6103e5565b60405161029a919061046c565b60405180910390f35b6102ab6103eb565b6040516102b8919061046c565b60405180910390f35b6102c9610403565b6040516102d6919061046c565b60405180910390f35b6102e7610409565b6040516102f4919061046c565b60405180910390f35b61030561040f565b604051610312919061046c565b60405180910390f35b610323610414565b604051610330919061046c565b60405180910390f35b61034161041a565b60405161034e919061046c565b60405180910390f35b61035f610420565b60405161036c919061046c565b60405180910390f35b61037d610426565b60405161038a919061046c565b60405180910390f35b61033a81565b61023681565b602081565b607c81565b61034881565b73bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb81565b6103d281565b6102be81565b61018881565b61026081565b61019a81565b6103da81565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61028381565b6102c681565b609c81565b61022a81565b61016481565b6102f481565b602481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104568261042b565b9050919050565b6104668161044b565b82525050565b6000602082019050610481600083018461045d565b9291505056fea26469706673582212209cd5662a3e7c68b3f7e90e01bb26038d708e11048be11ee857ccdd2343e4eeee64736f6c63430008110033",
							"opcodes": "PUSH2 0x4BD PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56EF4514 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA4A23595 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xA4A23595 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xCA9D1A72 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE774928E EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xF37FCC42 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xFD760C49 EQ PUSH2 0x375 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x56EF4514 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6B09583C EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8322FFF2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x976D5E77 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x9DB2A472 EQ PUSH2 0x2DF JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x2792949D GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x2792949D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x294A2BF2 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2E79477F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x465BD0A3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x53F7C367 EQ PUSH2 0x249 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x1B8B339 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x3D698F2 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xC012834 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x19342A64 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x1BF6C21B EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A DUP2 JUMP JUMPDEST PUSH2 0x236 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH1 0x7C DUP2 JUMP JUMPDEST PUSH2 0x348 DUP2 JUMP JUMPDEST PUSH20 0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB DUP2 JUMP JUMPDEST PUSH2 0x3D2 DUP2 JUMP JUMPDEST PUSH2 0x2BE DUP2 JUMP JUMPDEST PUSH2 0x188 DUP2 JUMP JUMPDEST PUSH2 0x260 DUP2 JUMP JUMPDEST PUSH2 0x19A DUP2 JUMP JUMPDEST PUSH2 0x3DA DUP2 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH2 0x283 DUP2 JUMP JUMPDEST PUSH2 0x2C6 DUP2 JUMP JUMPDEST PUSH1 0x9C DUP2 JUMP JUMPDEST PUSH2 0x22A DUP2 JUMP JUMPDEST PUSH2 0x164 DUP2 JUMP JUMPDEST PUSH2 0x2F4 DUP2 JUMP JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP3 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0x44B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x481 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD5 PUSH7 0x2A3E7C68B3F7E9 0xE ADD 0xBB 0x26 SUB DUP14 PUSH17 0x8E11048BE11EE857CCDD2343E4EEEE6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:1113:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ARS_787": {
									"entryPoint": 927,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@AUD_769": {
									"entryPoint": 1062,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BRL_835": {
									"entryPoint": 997,
									"id": 835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BTC_727": {
									"entryPoint": 943,
									"id": 727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CAD_775": {
									"entryPoint": 932,
									"id": 775,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CHF_781": {
									"entryPoint": 1056,
									"id": 781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CNY_763": {
									"entryPoint": 1039,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ETH_724": {
									"entryPoint": 1003,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EUR_745": {
									"entryPoint": 967,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GBP_739": {
									"entryPoint": 915,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INR_829": {
									"entryPoint": 1050,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPY_751": {
									"entryPoint": 979,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@KRW_757": {
									"entryPoint": 991,
									"id": 757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NGN_811": {
									"entryPoint": 921,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NZD_799": {
									"entryPoint": 1044,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PHP_793": {
									"entryPoint": 985,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RUB_823": {
									"entryPoint": 1027,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SGD_805": {
									"entryPoint": 973,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_733": {
									"entryPoint": 937,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ZAR_817": {
									"entryPoint": 1033,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:614:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "314:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "331:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "354:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "336:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "336:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "324:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "302:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "309:3:4",
														"type": ""
													}
												],
												"src": "241:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "501:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "489:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "577:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "590:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "601:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "525:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "463:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:4",
														"type": ""
													}
												],
												"src": "373:238:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106101365760003560e01c806356ef4514116100b7578063a4a235951161007b578063a4a23595146102fd578063ca9d1a721461031b578063e774928e14610339578063f37fcc4214610357578063fd760c491461037557610136565b806356ef4514146102675780636b09583c146102855780638322fff2146102a3578063976d5e77146102c15780639db2a472146102df57610136565b80632792949d116100fe5780632792949d146101d1578063294a2bf2146101ef5780632e79477f1461020d578063465bd0a31461022b57806353f7c3671461024957610136565b806301b8b3391461013b57806303d698f2146101595780630c0128341461017757806319342a64146101955780631bf6c21b146101b3575b600080fd5b610143610393565b604051610150919061046c565b60405180910390f35b610161610399565b60405161016e919061046c565b60405180910390f35b61017f61039f565b60405161018c919061046c565b60405180910390f35b61019d6103a4565b6040516101aa919061046c565b60405180910390f35b6101bb6103a9565b6040516101c8919061046c565b60405180910390f35b6101d96103af565b6040516101e6919061046c565b60405180910390f35b6101f76103c7565b604051610204919061046c565b60405180910390f35b6102156103cd565b604051610222919061046c565b60405180910390f35b6102336103d3565b604051610240919061046c565b60405180910390f35b6102516103d9565b60405161025e919061046c565b60405180910390f35b61026f6103df565b60405161027c919061046c565b60405180910390f35b61028d6103e5565b60405161029a919061046c565b60405180910390f35b6102ab6103eb565b6040516102b8919061046c565b60405180910390f35b6102c9610403565b6040516102d6919061046c565b60405180910390f35b6102e7610409565b6040516102f4919061046c565b60405180910390f35b61030561040f565b604051610312919061046c565b60405180910390f35b610323610414565b604051610330919061046c565b60405180910390f35b61034161041a565b60405161034e919061046c565b60405180910390f35b61035f610420565b60405161036c919061046c565b60405180910390f35b61037d610426565b60405161038a919061046c565b60405180910390f35b61033a81565b61023681565b602081565b607c81565b61034881565b73bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb81565b6103d281565b6102be81565b61018881565b61026081565b61019a81565b6103da81565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61028381565b6102c681565b609c81565b61022a81565b61016481565b6102f481565b602481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104568261042b565b9050919050565b6104668161044b565b82525050565b6000602082019050610481600083018461045d565b9291505056fea26469706673582212209cd5662a3e7c68b3f7e90e01bb26038d708e11048be11ee857ccdd2343e4eeee64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56EF4514 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA4A23595 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xA4A23595 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xCA9D1A72 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE774928E EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xF37FCC42 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xFD760C49 EQ PUSH2 0x375 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x56EF4514 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6B09583C EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8322FFF2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x976D5E77 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x9DB2A472 EQ PUSH2 0x2DF JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x2792949D GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x2792949D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x294A2BF2 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2E79477F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x465BD0A3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x53F7C367 EQ PUSH2 0x249 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x1B8B339 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x3D698F2 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xC012834 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x19342A64 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x1BF6C21B EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A DUP2 JUMP JUMPDEST PUSH2 0x236 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH1 0x7C DUP2 JUMP JUMPDEST PUSH2 0x348 DUP2 JUMP JUMPDEST PUSH20 0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB DUP2 JUMP JUMPDEST PUSH2 0x3D2 DUP2 JUMP JUMPDEST PUSH2 0x2BE DUP2 JUMP JUMPDEST PUSH2 0x188 DUP2 JUMP JUMPDEST PUSH2 0x260 DUP2 JUMP JUMPDEST PUSH2 0x19A DUP2 JUMP JUMPDEST PUSH2 0x3DA DUP2 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH2 0x283 DUP2 JUMP JUMPDEST PUSH2 0x2C6 DUP2 JUMP JUMPDEST PUSH1 0x9C DUP2 JUMP JUMPDEST PUSH2 0x22A DUP2 JUMP JUMPDEST PUSH2 0x164 DUP2 JUMP JUMPDEST PUSH2 0x2F4 DUP2 JUMP JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP3 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0x44B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x481 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD5 PUSH7 0x2A3E7C68B3F7E9 0xE ADD 0xBB 0x26 SUB DUP14 PUSH17 0x8E11048BE11EE857CCDD2343E4EEEE6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:1113:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;164:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;408:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;456;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;790;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1126;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;982;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;695;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:42;398:3;360:42;:::o;934:::-;972:3;934:42;:::o;743:41::-;781:2;743:41;:::o;647:42::-;685:3;647:42;:::o;312:::-;350:3;312:42;:::o;164:72::-;194:42;164:72;:::o;408:42::-;446:3;408:42;:::o;886:::-;924:3;886:42;:::o;456:::-;494:3;456:42;:::o;790:::-;828:3;790:42;:::o;504:::-;542:3;504:42;:::o;1126:::-;1164:3;1126:42;:::o;86:72::-;116:42;86:72;:::o;1030:42::-;1068:3;1030:42;:::o;982:::-;1020:3;982:42;:::o;552:::-;590:3;552:42;:::o;838:::-;876:3;838:42;:::o;1078:::-;1116:3;1078:42;:::o;695:::-;733:3;695:42;:::o;600:41::-;638:2;600:41;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:126::-;336:24;354:5;336:24;:::i;:::-;331:3;324:37;241:126;;:::o;373:238::-;474:4;512:2;501:9;497:18;489:26;;525:79;601:1;590:9;586:17;577:6;525:79;:::i;:::-;373:238;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242600",
								"executionCost": "309",
								"totalCost": "242909"
							},
							"external": {
								"ARS()": "430",
								"AUD()": "472",
								"BRL()": "407",
								"BTC()": "385",
								"CAD()": "452",
								"CHF()": "450",
								"CNY()": "384",
								"ETH()": "429",
								"EUR()": "407",
								"GBP()": "386",
								"INR()": "428",
								"JPY()": "451",
								"KRW()": "385",
								"NGN()": "408",
								"NZD()": "406",
								"PHP()": "473",
								"RUB()": "451",
								"SGD()": "429",
								"USD()": "474",
								"ZAR()": "473"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 58,
									"end": 1171,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cd5662a3e7c68b3f7e90e01bb26038d708e11048be11ee857ccdd2343e4eeee64736f6c63430008110033",
									".code": [
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "56EF4514"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "A4A23595"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "A4A23595"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "CA9D1A72"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "E774928E"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "F37FCC42"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "FD760C49"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "56EF4514"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "6B09583C"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "8322FFF2"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "976D5E77"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "9DB2A472"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "2792949D"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "2792949D"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "294A2BF2"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "2E79477F"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "465BD0A3"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "53F7C367"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "1B8B339"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "3D698F2"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "C012834"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "19342A64"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "1BF6C21B"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 1171,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 360,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 934,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 743,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 743,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 647,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 647,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 312,
											"end": 354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 312,
											"end": 354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 164,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 164,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 408,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 408,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 456,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 790,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 790,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 504,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 504,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1126,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 86,
											"end": 158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 86,
											"end": 158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1030,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 982,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 982,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 838,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 838,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1078,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1078,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 695,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 695,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 401,
											"name": "PUSH",
											"source": 2,
											"value": "33A"
										},
										{
											"begin": 360,
											"end": 402,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 360,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 972,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 934,
											"end": 976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 685,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "7C"
										},
										{
											"begin": 647,
											"end": 689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 312,
											"end": 354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
										},
										{
											"begin": 164,
											"end": 236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 164,
											"end": 236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 449,
											"name": "PUSH",
											"source": 2,
											"value": "3D2"
										},
										{
											"begin": 408,
											"end": 450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 408,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "2BE"
										},
										{
											"begin": 886,
											"end": 928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 494,
											"end": 497,
											"name": "PUSH",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 456,
											"end": 498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 456,
											"end": 498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 831,
											"name": "PUSH",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 790,
											"end": 832,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 542,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "19A"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 504,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1167,
											"name": "PUSH",
											"source": 2,
											"value": "3DA"
										},
										{
											"begin": 1126,
											"end": 1168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 86,
											"end": 158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 1030,
											"end": 1072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "2C6"
										},
										{
											"begin": 982,
											"end": 1024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 590,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "9C"
										},
										{
											"begin": 552,
											"end": 594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 879,
											"name": "PUSH",
											"source": 2,
											"value": "22A"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 733,
											"end": 736,
											"name": "PUSH",
											"source": 2,
											"value": "2F4"
										},
										{
											"begin": 695,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 695,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 367,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 241,
											"end": 367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 336,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 354,
											"end": 359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 336,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 336,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 336,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 336,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 334,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 324,
											"end": 361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 373,
											"end": 611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 497,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 525,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 601,
											"end": 602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 586,
											"end": 603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 525,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 525,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 525,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 525,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 373,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/ChainlinkOracle.sol",
								"contracts/Denominations.sol",
								"contracts/IPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ARS()": "0c012834",
							"AUD()": "fd760c49",
							"BRL()": "6b09583c",
							"BTC()": "2792949d",
							"CAD()": "19342a64",
							"CHF()": "f37fcc42",
							"CNY()": "a4a23595",
							"ETH()": "8322fff2",
							"EUR()": "294a2bf2",
							"GBP()": "01b8b339",
							"INR()": "e774928e",
							"JPY()": "465bd0a3",
							"KRW()": "56ef4514",
							"NGN()": "03d698f2",
							"NZD()": "ca9d1a72",
							"PHP()": "53f7c367",
							"RUB()": "976d5e77",
							"SGD()": "2e79477f",
							"USD()": "1bf6c21b",
							"ZAR()": "9db2a472"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ARS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AUD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CNY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EUR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GBP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KRW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NGN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NZD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RUB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SGD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZAR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Denominations.sol\":\"Denominations\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Denominations.sol\":{\"keccak256\":\"0xb5ec27aedcbf4b32a9e514cd7f5d3b95093e3d04a4eb42f482377f45dc030d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd7b7f2a5563993cdd6d7e5c6e58748d3b661a588fd3abf5e53e7f1625a7b88\",\"dweb:/ipfs/QmccN3SPi23dvChdZfMgC6Hj16uK3FxDgpffvGSKR6aWJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wrapper",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "getBundlePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "underlying",
									"type": "address"
								}
							],
							"name": "getUnderlyingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getBundlePrice(address,uint256)": "06cd702c",
							"getUnderlyingPrice(address)": "fc57d4df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getBundlePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xdabed1b1214f7f821fb9833d6d5eb4b92ac18eacb5db83222235eaf9fb17e24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63fb1f83980a5e691e8066322a18202d004191c536af9360d8d612a8915a1f45\",\"dweb:/ipfs/QmSZ6bwaEjRsCeYnmbkYgY6ZSW3pqmXYPE7jLv2WBqCo5W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/ChainlinkOracle.sol": {
				"ast": {
					"absolutePath": "contracts/ChainlinkOracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							531
						],
						"ChainlinkOracle": [
							719
						],
						"Denominations": [
							836
						],
						"IPriceOracle": [
							855
						],
						"IWrapper": [
							548
						],
						"Math": [
							503
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "contracts/IPriceOracle.sol",
							"file": "./IPriceOracle.sol",
							"id": 506,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 856,
							"src": "58:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Denominations.sol",
							"file": "./Denominations.sol",
							"id": 507,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 837,
							"src": "87:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 508,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 504,
							"src": "117:53:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "372:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "409:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:1"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "443:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 510,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "443:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:7:1"
									},
									"scope": 531,
									"src": "400:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcfd032d",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "465:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "503:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "495:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:29:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "577:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "570:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 519,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "605:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 521,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "598:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "633:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "625:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "664:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "656:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "694:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "687:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 527,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "687:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:163:1"
									},
									"scope": 531,
									"src": "456:264:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 720,
							"src": "362:360:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWrapper",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548
							],
							"name": "IWrapper",
							"nameLocation": "734:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "59f7cf50",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmounts",
									"nameLocation": "758:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "_nftId",
												"nameLocation": "777:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "769:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:16:1"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "832:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "832:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ArrayTypeName",
													"src": "832:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:18:1"
									},
									"scope": 548,
									"src": "749:101:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d3c9cc26",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nameLocation": "865:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_nftId",
												"nameLocation": "883:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "875:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:16:1"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "914:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 543,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "914:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 544,
													"nodeType": "ArrayTypeName",
													"src": "914:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:18:1"
									},
									"scope": 548,
									"src": "856:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 720,
							"src": "724:210:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 549,
										"name": "IPriceOracle",
										"nameLocations": [
											"964:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "964:12:1"
									},
									"id": 550,
									"nodeType": "InheritanceSpecifier",
									"src": "964:12:1"
								}
							],
							"canonicalName": "ChainlinkOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719,
								855
							],
							"name": "ChainlinkOracle",
							"nameLocation": "945:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 553,
									"libraryName": {
										"id": 551,
										"name": "Math",
										"nameLocations": [
											"989:4:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 503,
										"src": "989:4:1"
									},
									"nodeType": "UsingForDirective",
									"src": "983:23:1",
									"typeName": {
										"id": 552,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "998:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 559,
									"mutability": "constant",
									"name": "feedRegistry",
									"nameLocation": "1119:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "1080:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$531",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 555,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 554,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1080:21:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 531,
											"src": "1080:21:1"
										},
										"referencedDeclaration": 531,
										"src": "1080:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$531",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834374662323538354432433536466531383844304536656336323861333862373466436565654466",
												"id": 557,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1164:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x47Fb2585D2C56Fe188D0E6ec628a38b74fCeeeDf"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 556,
											"name": "AggregatorV3Interface",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 531,
											"src": "1142:21:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$531_$",
												"typeString": "type(contract AggregatorV3Interface)"
											}
										},
										"id": 558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1142:65:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$531",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 563,
									"name": "Log",
									"nameLocation": "1219:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1230:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1223:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:16:1"
									},
									"src": "1213:26:1"
								},
								{
									"constant": false,
									"functionSelector": "08a130ab",
									"id": 565,
									"mutability": "immutable",
									"name": "Wrapper",
									"nameLocation": "1270:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "1245:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 564,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1245:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1314:35:1",
										"statements": [
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "Wrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 571,
														"name": "_wrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "1334:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1324:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1324:18:1"
											}
										]
									},
									"id": 575,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_wrapper",
												"nameLocation": "1304:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1296:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:18:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:1"
									},
									"scope": 719,
									"src": "1284:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1463:1014:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "wrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1554:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 585,
														"name": "Wrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1565:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1554:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "@notice If it's say a BAYC and not a wrapper, getUnderlyingPrice",
												"id": 591,
												"nodeType": "IfStatement",
												"src": "1550:59:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 588,
																"name": "wrapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "1601:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 587,
															"name": "_getUnderlyingPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "1581:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1581:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 583,
													"id": 590,
													"nodeType": "Return",
													"src": "1574:35:1"
												}
											},
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "1637:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "1620:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 594,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1620:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 595,
															"nodeType": "ArrayTypeName",
															"src": "1620:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"arguments": [
														{
															"id": 601,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "1674:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "wrapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "1655:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 597,
																"name": "IWrapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "1646:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWrapper_$548_$",
																	"typeString": "type(contract IWrapper)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1646:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWrapper_$548",
																"typeString": "contract IWrapper"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1664:9:1",
														"memberName": "getTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "1646:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) view external returns (address[] memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1620:60:1"
											},
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "1707:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "1690:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 606,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1690:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ArrayTypeName",
															"src": "1690:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"arguments": [
														{
															"id": 613,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "1746:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 610,
																	"name": "wrapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "1726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "IWrapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "1717:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWrapper_$548_$",
																	"typeString": "type(contract IWrapper)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWrapper_$548",
																"typeString": "contract IWrapper"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1735:10:1",
														"memberName": "getAmounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "1717:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) view external returns (uint256[] memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1690:62:1"
											},
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "totalPriceUSD",
														"nameLocation": "1834:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "1826:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"nodeType": "VariableDeclarationStatement",
												"src": "1826:21:1"
											},
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1886:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "1878:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1878:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"expression": {
														"id": 621,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1895:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1902:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1895:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1878:30:1"
											},
											{
												"body": {
													"id": 657,
													"nodeType": "Block",
													"src": "1956:485:1",
													"statements": [
														{
															"assignments": [
																635
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 635,
																	"mutability": "mutable",
																	"name": "underlyingPrice",
																	"nameLocation": "2253:15:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 657,
																	"src": "2245:23:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2245:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 641,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 637,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "2291:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 639,
																		"indexExpression": {
																			"id": 638,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "2298:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2291:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 636,
																	"name": "_getUnderlyingPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "2271:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2245:56:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 642,
																	"name": "underlyingPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2319:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2338:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2319:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 656,
															"nodeType": "IfStatement",
															"src": "2315:116:1",
															"trueBody": {
																"id": 655,
																"nodeType": "Block",
																"src": "2341:90:1",
																"statements": [
																	{
																		"expression": {
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 645,
																				"name": "totalPriceUSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "2359:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 648,
																							"name": "amounts",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 608,
																							"src": "2399:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 650,
																						"indexExpression": {
																							"id": 649,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 625,
																							"src": "2407:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2399:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "31653138",
																						"id": 651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2411:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"expression": {
																						"id": 646,
																						"name": "underlyingPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 635,
																						"src": "2376:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2392:6:1",
																					"memberName": "mulDiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 212,
																					"src": "2376:22:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2376:40:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2359:57:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 654,
																		"nodeType": "ExpressionStatement",
																		"src": "2359:57:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "1939:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 629,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1943:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1939:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"initializationExpression": {
													"assignments": [
														625
													],
													"declarations": [
														{
															"constant": false,
															"id": 625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1932:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 658,
															"src": "1924:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1924:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 627,
													"initialValue": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1936:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1924:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1951:3:1",
														"subExpression": {
															"id": 631,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "1951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 633,
													"nodeType": "ExpressionStatement",
													"src": "1951:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1919:522:1"
											},
											{
												"expression": {
													"id": 659,
													"name": "totalPriceUSD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 617,
													"src": "2457:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 583,
												"id": 660,
												"nodeType": "Return",
												"src": "2450:20:1"
											}
										]
									},
									"functionSelector": "06cd702c",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBundlePrice",
									"nameLocation": "1364:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "wrapper",
												"nameLocation": "1387:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1379:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1404:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1396:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:32:1"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1450:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:9:1"
									},
									"scope": 719,
									"src": "1355:1122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2592:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "_underlying",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "2629:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 669,
														"name": "_getUnderlyingPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "2609:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 672,
												"nodeType": "Return",
												"src": "2602:39:1"
											}
										]
									},
									"functionSelector": "fc57d4df",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingPrice",
									"nameLocation": "2492:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "_underlying",
												"nameLocation": "2519:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2511:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:21:1"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2579:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:9:1"
									},
									"scope": 719,
									"src": "2483:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2902:740:1",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "quote",
														"nameLocation": "3052:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "3044:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3044:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"expression": {
														"id": 683,
														"name": "Denominations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "3060:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Denominations_$836_$",
															"typeString": "type(library Denominations)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3074:3:1",
													"memberName": "USD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 733,
													"src": "3060:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3044:33:1"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3317:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "3311:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 686,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3311:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 688,
															"name": "feedRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3328:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$531",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3341:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 513,
														"src": "3328:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3311:40:1"
											},
											{
												"assignments": [
													null,
													693,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "underlyingPrice",
														"nameLocation": "3371:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "3364:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 692,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3364:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"id": 696,
															"name": "underlying",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3438:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3462:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 694,
															"name": "feedRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3396:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$531",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3409:15:1",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 530,
														"src": "3396:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function (address,address) view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3361:116:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 702,
																			"name": "underlyingPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "3583:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3582:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "31653236",
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3603:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																				"typeString": "int_const 100000000000000000000000000"
																			},
																			"value": "1e26"
																		}
																	],
																	"id": 705,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3602:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																		"typeString": "int_const 100000000000000000000000000"
																	}
																},
																"src": "3582:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 700,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3574:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3574:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3613:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 711,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "3625:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3617:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 709,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3617:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3617:17:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3613:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 714,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3612:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3574:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 716,
												"nodeType": "Return",
												"src": "3488:147:1"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnderlyingPrice",
									"nameLocation": "2802:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "underlying",
												"nameLocation": "2830:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2822:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:20:1"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2889:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:9:1"
									},
									"scope": 719,
									"src": "2793:849:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "936:2708:1",
							"usedErrors": []
						}
					],
					"src": "32:3613:1"
				},
				"id": 1
			},
			"contracts/Denominations.sol": {
				"ast": {
					"absolutePath": "contracts/Denominations.sol",
					"exportedSymbols": {
						"Denominations": [
							836
						]
					},
					"id": 837,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Denominations",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 836,
							"linearizedBaseContracts": [
								836
							],
							"name": "Denominations",
							"nameLocation": "66:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "8322fff2",
									"id": 724,
									"mutability": "constant",
									"name": "ETH",
									"nameLocation": "110:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "86:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 722,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 723,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "116:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2792949d",
									"id": 727,
									"mutability": "constant",
									"name": "BTC",
									"nameLocation": "188:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "164:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 725,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307862426242424242626242424262626242626242626262624242624262626262426242626242426242",
										"id": 726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "194:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1bf6c21b",
									"id": 733,
									"mutability": "constant",
									"name": "USD",
									"nameLocation": "336:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "312:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 728,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "383430",
												"id": 731,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "350:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_840_by_1",
													"typeString": "int_const 840"
												},
												"value": "840"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_840_by_1",
													"typeString": "int_const 840"
												}
											],
											"id": 730,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "342:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 729,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "342:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "342:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "01b8b339",
									"id": 739,
									"mutability": "constant",
									"name": "GBP",
									"nameLocation": "384:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "360:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 734,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "360:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "383236",
												"id": 737,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "398:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_826_by_1",
													"typeString": "int_const 826"
												},
												"value": "826"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_826_by_1",
													"typeString": "int_const 826"
												}
											],
											"id": 736,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "390:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 735,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "390:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "390:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "294a2bf2",
									"id": 745,
									"mutability": "constant",
									"name": "EUR",
									"nameLocation": "432:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "408:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 740,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "393738",
												"id": 743,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "446:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_978_by_1",
													"typeString": "int_const 978"
												},
												"value": "978"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_978_by_1",
													"typeString": "int_const 978"
												}
											],
											"id": 742,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "438:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 741,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "438:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "438:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "465bd0a3",
									"id": 751,
									"mutability": "constant",
									"name": "JPY",
									"nameLocation": "480:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "456:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 746,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "333932",
												"id": 749,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_392_by_1",
													"typeString": "int_const 392"
												},
												"value": "392"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_392_by_1",
													"typeString": "int_const 392"
												}
											],
											"id": 748,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "486:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 747,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 750,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "486:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "56ef4514",
									"id": 757,
									"mutability": "constant",
									"name": "KRW",
									"nameLocation": "528:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "504:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 752,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "504:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "343130",
												"id": 755,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "542:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_410_by_1",
													"typeString": "int_const 410"
												},
												"value": "410"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_410_by_1",
													"typeString": "int_const 410"
												}
											],
											"id": 754,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "534:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 753,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 756,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "534:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a4a23595",
									"id": 763,
									"mutability": "constant",
									"name": "CNY",
									"nameLocation": "576:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "552:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 758,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "313536",
												"id": 761,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_156_by_1",
													"typeString": "int_const 156"
												},
												"value": "156"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_156_by_1",
													"typeString": "int_const 156"
												}
											],
											"id": 760,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "582:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "582:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "582:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fd760c49",
									"id": 769,
									"mutability": "constant",
									"name": "AUD",
									"nameLocation": "624:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "600:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 764,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "600:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "3336",
												"id": 767,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "638:2:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_36_by_1",
													"typeString": "int_const 36"
												},
												"value": "36"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_36_by_1",
													"typeString": "int_const 36"
												}
											],
											"id": 766,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "630:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 765,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "630:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "630:11:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "19342a64",
									"id": 775,
									"mutability": "constant",
									"name": "CAD",
									"nameLocation": "671:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "647:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 770,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "313234",
												"id": 773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "685:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_124_by_1",
													"typeString": "int_const 124"
												},
												"value": "124"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_124_by_1",
													"typeString": "int_const 124"
												}
											],
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "677:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 771,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "677:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 774,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "677:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f37fcc42",
									"id": 781,
									"mutability": "constant",
									"name": "CHF",
									"nameLocation": "719:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "695:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "373536",
												"id": 779,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "733:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_756_by_1",
													"typeString": "int_const 756"
												},
												"value": "756"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_756_by_1",
													"typeString": "int_const 756"
												}
											],
											"id": 778,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "725:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 777,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "725:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "725:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0c012834",
									"id": 787,
									"mutability": "constant",
									"name": "ARS",
									"nameLocation": "767:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "743:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 782,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "3332",
												"id": 785,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "781:2:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_32_by_1",
													"typeString": "int_const 32"
												},
												"value": "32"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_32_by_1",
													"typeString": "int_const 32"
												}
											],
											"id": 784,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "773:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 783,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "773:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "773:11:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "53f7c367",
									"id": 793,
									"mutability": "constant",
									"name": "PHP",
									"nameLocation": "814:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "790:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 788,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "790:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "363038",
												"id": 791,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "828:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_608_by_1",
													"typeString": "int_const 608"
												},
												"value": "608"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_608_by_1",
													"typeString": "int_const 608"
												}
											],
											"id": 790,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "820:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 789,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "820:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "820:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ca9d1a72",
									"id": 799,
									"mutability": "constant",
									"name": "NZD",
									"nameLocation": "862:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "838:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 794,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "353534",
												"id": 797,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "876:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_554_by_1",
													"typeString": "int_const 554"
												},
												"value": "554"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_554_by_1",
													"typeString": "int_const 554"
												}
											],
											"id": 796,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "868:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "868:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "868:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2e79477f",
									"id": 805,
									"mutability": "constant",
									"name": "SGD",
									"nameLocation": "910:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "886:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 800,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "373032",
												"id": 803,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "924:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_702_by_1",
													"typeString": "int_const 702"
												},
												"value": "702"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_702_by_1",
													"typeString": "int_const 702"
												}
											],
											"id": 802,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "916:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 801,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "916:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "916:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "03d698f2",
									"id": 811,
									"mutability": "constant",
									"name": "NGN",
									"nameLocation": "958:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "934:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 806,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "353636",
												"id": 809,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "972:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_566_by_1",
													"typeString": "int_const 566"
												},
												"value": "566"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_566_by_1",
													"typeString": "int_const 566"
												}
											],
											"id": 808,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "964:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 807,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "964:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "964:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9db2a472",
									"id": 817,
									"mutability": "constant",
									"name": "ZAR",
									"nameLocation": "1006:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "982:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 812,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "982:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "373130",
												"id": 815,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1020:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_710_by_1",
													"typeString": "int_const 710"
												},
												"value": "710"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_710_by_1",
													"typeString": "int_const 710"
												}
											],
											"id": 814,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1012:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 813,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 816,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1012:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "976d5e77",
									"id": 823,
									"mutability": "constant",
									"name": "RUB",
									"nameLocation": "1054:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "1030:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 818,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1030:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "363433",
												"id": 821,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1068:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_643_by_1",
													"typeString": "int_const 643"
												},
												"value": "643"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_643_by_1",
													"typeString": "int_const 643"
												}
											],
											"id": 820,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1060:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 819,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1060:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1060:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e774928e",
									"id": 829,
									"mutability": "constant",
									"name": "INR",
									"nameLocation": "1102:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "1078:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 824,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1078:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "333536",
												"id": 827,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1116:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_356_by_1",
													"typeString": "int_const 356"
												},
												"value": "356"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_356_by_1",
													"typeString": "int_const 356"
												}
											],
											"id": 826,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1108:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 825,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1108:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 828,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1108:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6b09583c",
									"id": 835,
									"mutability": "constant",
									"name": "BRL",
									"nameLocation": "1150:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "1126:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 830,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1126:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "393836",
												"id": 833,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1164:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_986_by_1",
													"typeString": "int_const 986"
												},
												"value": "986"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_986_by_1",
													"typeString": "int_const 986"
												}
											],
											"id": 832,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1156:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 831,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1156:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1156:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 837,
							"src": "58:1113:2",
							"usedErrors": []
						}
					],
					"src": "33:1139:2"
				},
				"id": 2
			},
			"contracts/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							855
						]
					},
					"id": 856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 838,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 855,
							"linearizedBaseContracts": [
								855
							],
							"name": "IPriceOracle",
							"nameLocation": "68:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fc57d4df",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingPrice",
									"nameLocation": "180:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "underlying",
												"nameLocation": "207:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "199:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:20:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "242:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:9:3"
									},
									"scope": 855,
									"src": "171:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06cd702c",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBundlePrice",
									"nameLocation": "265:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "wrapper",
												"nameLocation": "288:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "280:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "305:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "297:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "334:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:3"
									},
									"scope": 855,
									"src": "256:87:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 856,
							"src": "58:287:3",
							"usedErrors": []
						}
					],
					"src": "32:313:3"
				},
				"id": 3
			}
		}
	}
}